[{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Vignette of the GetFeatistics package","text":"GetFeatistics (GF) package provides several functions useful elaboration metabolomics data. vignette find example workflow using functions package.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Vignette of the GetFeatistics package","text":"haven’t installed package yet?! Let’s amend just running following code. Just prepared might take time update dependencies. hope everything went well! issue, please contact . testing, noted might error installation don’t Java (please install !) version Java (32 bit 64 bit) doesn’t match version R (please, check installation doesn’t work!).","code":"if (!require(\"devtools\", quietly = TRUE)) {     install.packages(\"devtools\") }  devtools::install_github(\"FrigerioGianfranco/GetFeatistics\", dependencies = TRUE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"loading-the-package","dir":"Articles","previous_headings":"","what":"Loading the package","title":"Vignette of the GetFeatistics package","text":"following line load package dependencies current working environment. Let’s start fun!","code":"library(GetFeatistics)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"create-mock-data","dir":"Articles","previous_headings":"","what":"Create mock data","title":"Vignette of the GetFeatistics package","text":"vignette, use mock data simulate targeted untargeted metabolomics experiments. vignette composed four main chapters: 1. Targeted analyses, 2. Non-targeted analyses, 3. Statistical analyses, 4. Miscellaneous.","code":"create_df_examples() #>  #>  In the Global Environment, created the object  df_example_generic #>  In the Global Environment, created the object  df_example_targeted #>  In the Global Environment, created the object  df_example_targeted_legend #>  In the Global Environment, created the object  df_example_targeted_compounds_legend #>  In the Global Environment, created the object  df_example_sample_data #>  In the Global Environment, created the object  df_example_feat_intensities #>  In the Global Environment, created the object  df_example_feat_info #>  In the Global Environment, created the object  df_example_qc_sampletype #>  In the Global Environment, created the object  df_example_melecules_to_search #>  In the Global Environment, created the object  df_example_gradient"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"targeted-analyses","dir":"Articles","previous_headings":"","what":"1. Targeted analyses","title":"Vignette of the GetFeatistics package","text":"elaborate targeted analyses, need organise data least two tables: first contain intensities peak area. Samples rows, analysed compounds columns. Hopefully can export table chromatographic vendor software. using df_example_targeted: need prepare second table : first column must identical first column first table; second column contain following: “blank”, “curve”, “qc”, “unknown”. third column actual known values “curve” “qc” samples. clear? taste df_example_targeted_legend: say “least” two tables, remember? Well, even though ’s mandatory, preparing third table useful especially work internal standards. data frame contain four columns: first column, name targeted molecules; second column, matched internal standard (NA isn’t internal standard molecule); third column, weighting factor want calibration curve molecule. highly recommend use weighting factor 1/X, 1/Y, 1/(Y^2) better accuracy low concentrated analytes, still don’t want, can put “none” NA; fourth column, unit measure known concentration (visualizations ’s considered calculation). Yes, everything df_example_targeted_compounds_legend: Now tables, just need pass three arguments get_targeted_elaboration function! output function list 5 useful elements: results_concentrations: table calculated concentrations (need following statistical analyses) results_accuracy: table calculated accuracy (%) curve points qc. ’s good check values 80% 120%! cv_internal_standards: relative standard deviation (%) intensities internal standards. compound_legend: ’s table provided third argument. thought good keep valuable information! summary_regression_models: stuff fitted linear regression models : slope, intercept, r squared, adjusted r squared. regression_models: list fitted regression models. Amazing! Let’s check example results_concentrations table looks like: maybe want see coefficient determination good enough, numeric value reported summary_regression_models table: Well, calibration curves, right? , better visualise ! Let’s use function plot_calibration_curves. create list ggplots can either print R export using export_figures function.  figures package created ggplot object, can furhter modified following ggplot2 sintax. Last step moving next chapter: let’s store separately just need later statistics. Two easy steps. Collect data frame results unknown samples object: Collect name variables another distinct object:","code":"df_example_targeted #> # A tibble: 83 × 7 #>    samples          molecule01 molecule01_IS molecule02 molecule02_IS molecule03 #>    <chr>                 <dbl>         <dbl>      <dbl>         <dbl>      <dbl> #>  1 blank                     0     85009210.          0       512295.          2 #>  2 blank                    12     85058549.         12       513398.        474 #>  3 blank                    45     85544475.         45       512771.          2 #>  4 calibration_cur…        862     84525132.      64851       512250.     184514 #>  5 calibration_cur…     916839     83570564.   69002371       513334.    3926523 #>  6 calibration_cur…    2437097     84157195.  122279121       510583.   13916386 #>  7 calibration_cur…    8664951     84662094.  217377977       513191.   51540480 #>  8 calibration_cur…   10163671     85495504.  254976452       514245.   90682659 #>  9 calibration_cur…   13164865     84600992.  402513548       512262.  132142516 #> 10 calibration_cur…   16546462     85375590.  622652692       513297.  177157699 #> # ℹ 73 more rows #> # ℹ 1 more variable: molecule04 <dbl> df_example_targeted_legend #> # A tibble: 83 × 6 #>    samples               sample_type molecule01 molecule02 molecule03 molecule04 #>    <chr>                 <chr>            <dbl>      <dbl>      <dbl>      <dbl> #>  1 blank                 blank               NA         NA         NA         NA #>  2 blank                 blank               NA         NA         NA         NA #>  3 blank                 blank               NA         NA         NA         NA #>  4 calibration_curve_le… curve                0          0          0          0 #>  5 calibration_curve_le… curve               10        100          2         10 #>  6 calibration_curve_le… curve               30        200          8         30 #>  7 calibration_curve_le… curve               90        300         25         90 #>  8 calibration_curve_le… curve              120        400         50        120 #>  9 calibration_curve_le… curve              160        650         75        160 #> 10 calibration_curve_le… curve              200       1000        100        200 #> # ℹ 73 more rows df_example_targeted_compounds_legend #> # A tibble: 4 × 4 #>   compounds  matched_IS    weighting unit  #>   <chr>      <chr>         <chr>     <chr> #> 1 molecule01 molecule01_IS 1/Y       ng/mL #> 2 molecule02 molecule02_IS none      ug/mL #> 3 molecule03 NA            1/(Y^2)   ng/mL #> 4 molecule04 NA            NA        NA TARGETED_EXAMPLE_RESULTS <- get_targeted_elaboration(data_intensity = df_example_targeted,                                                      data_legend = df_example_targeted_legend,                                                      compound_legend = df_example_targeted_compounds_legend) TARGETED_EXAMPLE_RESULTS$results_concentrations #> # A tibble: 83 × 6 #>    samples               sample_type molecule01 molecule02 molecule03 molecule04 #>    <chr>                 <chr>            <dbl>      <dbl>      <dbl>      <dbl> #>  1 blank                 blank          -0.0209      -9.32   -0.0993       -2.19 #>  2 blank_2               blank          -0.0207      -9.32   -0.0990       -2.18 #>  3 blank_3               blank          -0.0204      -9.32   -0.0993       -2.19 #>  4 calibration_curve_le… curve          -0.0105      -9.22    0.00449      -2.08 #>  5 calibration_curve_le… curve          11.2        103.      2.11          9.09 #>  6 calibration_curve_le… curve          29.6        191.      7.73         27.8  #>  7 calibration_curve_le… curve         105.         346.     28.9         104.   #>  8 calibration_curve_le… curve         121.         406.     50.9         123.   #>  9 calibration_curve_le… curve         159.         649.     74.2         160.   #> 10 calibration_curve_le… curve         198.        1007.     99.6         201.   #> # ℹ 73 more rows TARGETED_EXAMPLE_RESULTS$summary_regression_models #> # A tibble: 4 × 5 #>   parameter     molecule01 molecule02  molecule03 molecule04 #>   <chr>              <dbl>      <dbl>       <dbl>      <dbl> #> 1 slope          0.000979       1.19  1777751.      5140.    #> 2 intercept      0.0000204     11.1    176526.     11237.    #> 3 r.squared      0.996          0.994       0.995      0.992 #> 4 adj.r.squared  0.995          0.994       0.994      0.992 TARGETED_EXAMPLE_CALIBRATION_CURVES <- plot_calibration_curves(targeted_elaboration = TARGETED_EXAMPLE_RESULTS)  TARGETED_EXAMPLE_CALIBRATION_CURVES$molecule01 #> `geom_smooth()` using formula = 'y ~ x' export_figures(TARGETED_EXAMPLE_CALIBRATION_CURVES, exprt_fig_type = \"pdf\") TARGETED_RESULTS_FOR_STATISTICS <- filter(TARGETED_EXAMPLE_RESULTS$results_concentrations, sample_type == \"unknown\") TARGETED_MOLECULES <- TARGETED_EXAMPLE_RESULTS$compound_legend$compounds"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"non-targeted-analyses","dir":"Articles","previous_headings":"","what":"2. Non-targeted analyses","title":"Vignette of the GetFeatistics package","text":"package supposed used obtaining feature table using open source tools XCMS MS-Dial. particular, need table feature intensities like (just simple example, usually many features!): featINFO table, whose first column must identical first column feature intensity table, retention times, m/z, valuable information related feature, one: worked MS-Dial, just need export areas normalized areas, use functions get_feat_table_from_MSDial get_feat_info_from_MSDial. example, something like : (check full documentation functions want know !) used XCMS working within patRoon (didn’t, suggest next time patRoon great “docking station” tool feature several widely used R-based algorithms, metFrag example, check : https://github.com/rickhelmus/patRoon) can use functions get_feat_table_from_patRoon get_feat_info_from_patRoon. examples (check full documentation learn pass arguments): Great. previous two chunks actually run, vignette using mock df_example_feat_intensities df_example_feat_info. list actual chemical standards (without retention times) can check standards present feature tables. , need prepare table like df_example_melecules_to_search: , can use function checkmolecules_in_feat_table passing: data frames feature intensity, feature INFO, known molecules first three arguments, respectively; name column known molecules data frames containing m/z values mz_to_search (third column taken default); accepted error value error; “ppm” “Da” error_type (refering error value); TRUE check_rt retention times want also check ; name column known molecules data frames containing retention time values rt_to_search  (second column taken default); accepted window retention time rt_window (sure unit, like seconds minutes, consistent!) finally, set return_as_featinfo_lev1 TRUE, confirmed molecules marked AnnoLevel “1” featINFO table. Amazing!! Note featINFO MS-Dial patRoon, instead example featINFO, AnnoLevel features! Now, good metabolomer, know much important clean dataset using well-established methods pooled quality controls (QCs). want filter feature data table considering defined cut-offs analyses pooled QCs, might want read next step carefully! First, need prepare table containing following information: first column contains sample names. second column contain “REMOVE” (consider samples, suggest first analyses batch), “blank”, “QC”, “QC_half” (prepared 50:50 dilution pooled QC samples) “unknown”. third prepared separated pooled QCs prepared. want information approach, please check idea behind reading paper: https://doi.org/10.3390/molecules27082580. table, together table feature intensities, need run QCs_process function, filter table features meet cut-offs: step1: TRUE, features relative standard deviation (CV%) greater value defined step1_cutoff filtered . step2: TRUE, features present least percentage QC samples defined step2_cutoff filtered . step3: TRUE, features blank contribution, .e.: ratio mean blank mean QC, greater value defined step3_cutoff filtered . step4: TRUE, features whose mean “QC_half” samples percentage range two values defined step4_cutoff compared mean QCs filtered . Moreover, sep_QC TRUE, steps performed separately QC groups, features confirmed least one groups defined QC_to_merge kept. ’d suggest also filter featINFO table accordingly, run something like : Brilliant. Last step chapter prepare need following statistical elaborations. Statistically speaking, considering samples observations (rows) features variables (columns) better statistics. Luckily, prepared function transpose current feature table: Finally, also need collect feature names character vector object:","code":"df_example_feat_intensities #> # A tibble: 9 × 78 #>   featname   QCpooled_tot01 QCpooled_tot02 blank_untargeted01 QCpooled_tot03 #>   <chr>               <dbl>          <dbl>              <dbl>          <dbl> #> 1 feature001       74181229       42824388             720501      657266255 #> 2 feature002      118220210      115639566               8321      106082721 #> 3 feature003      110622819      127316421                 NA      137718462 #> 4 feature004        2294835        2492735                 42        2504627 #> 5 feature005         153153         116759                 NA         196216 #> 6 feature006             NA      202824643           20093295         446030 #> 7 feature007         139350          80736                 NA          71090 #> 8 feature008       30986875       12910756              13343         754989 #> 9 feature009       20555071       21102214              23060             NA #> # ℹ 73 more variables: QCpooled_F3A01 <dbl>, QCpooled_F3B01 <dbl>, #> #   QCpooled_F3C01 <dbl>, unkwon_sample_001 <dbl>, unkwon_sample_002 <dbl>, #> #   unkwon_sample_003 <dbl>, unkwon_sample_004 <dbl>, unkwon_sample_005 <dbl>, #> #   unkwon_sample_006 <dbl>, unkwon_sample_007 <dbl>, unkwon_sample_008 <dbl>, #> #   unkwon_sample_009 <dbl>, unkwon_sample_010 <dbl>, QCpooled_tot04 <dbl>, #> #   QCpooled_F3A02 <dbl>, QCpooled_F3B02 <dbl>, QCpooled_F3C02 <dbl>, #> #   unkwon_sample_011 <dbl>, unkwon_sample_012 <dbl>, … df_example_feat_info #> # A tibble: 9 × 3 #>   featname      rt    mz #>   <chr>      <dbl> <dbl> #> 1 feature001   242  120. #> 2 feature002   288  146. #> 3 feature003   408  203. #> 4 feature004   528  148. #> 5 feature005   465  164. #> 6 feature006   476  164. #> 7 feature007   342  204. #> 8 feature008   221  104. #> 9 feature009   593  425. FEAT_TABLE_FROM_MSDIAL <- get_feat_table_from_MSDial(MSDIAL_raw_table_file_name = \"FILE_AREA_EXPORTED_FROM_MSDIAL.txt\",                                                      n_last_coloums_to_delete = 2)  FEAT_INFO_FROM_MSDIAL <- get_feat_info_from_MSDial(MSDIAL_raw_table_file_name = \"FILE_AREA_EXPORTED_FROM_MSDIAL.txt\",                                                    add_AnnoLevels = TRUE) FEAT_TABLE_FROM_PATROON <- get_feat_table_from_patRoon(patRoon_featureGroups = _featureGroups_DATA_FRAME_FROM_patRoon_)  FEAT_INFO_FROM_PATROON <- get_feat_info_from_patRoon(patRoon_featureGroups = _featureGroups_DATA_FRAME_FROM_patRoon_,                                                      patRoon_MFsummary = _MFsummary_DATA_FRAME_FROM_patRoon_,                                                      MFsummary_score_columns = c(\"individualMoNAScore\", \"score\"),                                                      add_AnnoLevels = TRUE) df_example_melecules_to_search #> # A tibble: 8 × 4 #>   coumpound        rt    mz   CID #>   <chr>         <dbl> <dbl> <dbl> #> 1 Alanine         146  88.0  5950 #> 2 Asparagine      262 131.   6267 #> 3 Cysteine        243 120.   5862 #> 4 Glutamate       290 146.  33032 #> 5 Glycine         169  74.0   750 #> 6 Leucine          98 130.   6106 #> 7 Methionine      258 148.   6137 #> 8 Phenylalanine   471 164.   6140 df_example_feat_info_withLev1 <- checkmolecules_in_feat_table(featmatrix = df_example_feat_intensities,                                                               featinfo = df_example_feat_info,                                                               molecules_list = df_example_melecules_to_search,                                                               mz_to_search = NULL,                                                               error = 20,                                                               error_type = \"ppm\",                                                               check_rt = TRUE,                                                               rt_to_search = NULL,                                                               rt_window = 12,                                                               return_as_featinfo_lev1 = TRUE)  df_example_feat_info_withLev1 #> # A tibble: 9 × 10 #>   featname      rt    mz coumpound     rt_molecule_list mz_molecule_list   CID #>   <chr>      <dbl> <dbl> <chr>                    <dbl>            <dbl> <dbl> #> 1 feature001   242  120. Cysteine                   243             120.  5862 #> 2 feature002   288  146. Glutamate                  290             146. 33032 #> 3 feature003   408  203. NA                          NA              NA     NA #> 4 feature004   528  148. NA                          NA              NA     NA #> 5 feature005   465  164. Phenylalanine              471             164.  6140 #> 6 feature006   476  164. Phenylalanine              471             164.  6140 #> 7 feature007   342  204. NA                          NA              NA     NA #> 8 feature008   221  104. NA                          NA              NA     NA #> 9 feature009   593  425. NA                          NA              NA     NA #> # ℹ 3 more variables: AnnoLevel <chr>, rt_shift <dbl>, mz_shift <dbl> df_example_qc_sampletype #> # A tibble: 77 × 3 #>    samples            action  qc_group #>    <chr>              <chr>   <chr>    #>  1 QCpooled_tot01     REMOVE  NA       #>  2 QCpooled_tot02     REMOVE  NA       #>  3 blank_untargeted01 blank   NA       #>  4 QCpooled_tot03     QC      tot      #>  5 QCpooled_F3A01     QC      F3A      #>  6 QCpooled_F3B01     QC      F3B      #>  7 QCpooled_F3C01     QC      F3C      #>  8 unkwon_sample_001  unknown NA       #>  9 unkwon_sample_002  unknown NA       #> 10 unkwon_sample_003  unknown NA       #> # ℹ 67 more rows UNTARGETED_FEAT_TABLE_QC_FILTERED <- QCs_process(featmatrix = df_example_feat_intensities,                                                  sampletype = df_example_qc_sampletype,                                                  sep_QC = TRUE,                                                  QC_to_merge = c(\"tot\", \"F3A\", \"F3B\", \"F3C\"),                                                  step1 = TRUE,                                                  step1_cutoff = 50,                                                  step2 = TRUE,                                                  step2_cutoff = 50,                                                  step3 = TRUE,                                                  step3_cutoff = 50,                                                  step4 = FALSE,                                                  step4_cutoff = c(20, 80),                                                  rtrn_filtered_table = TRUE,                                                  remove_results = TRUE,                                                  remove_QC_and_blanks = TRUE) #> After the QC processing, for tot the feature table was reduced from 9 to 5 fetures #> After the QC processing, for F3A the feature table was reduced from 9 to 2 fetures #> After the QC processing, for F3B the feature table was reduced from 9 to 3 fetures #> After the QC processing, for F3C the feature table was reduced from 9 to 3 fetures #> Furthermore, while considering the feature matrix combined of tot F3A F3B F3C the final table contained 6 features UNTARGETED_FEAT_INFO_QC_FILTERED <- filter(df_example_feat_info_withLev1,                                            featname %in% UNTARGETED_FEAT_TABLE_QC_FILTERED$featname) UNTARGETED_RESULTS_FOR_STATISTICS <- transpose_feat_table(UNTARGETED_FEAT_TABLE_QC_FILTERED) FEATURES_CONSIDERED <- colnames(UNTARGETED_RESULTS_FOR_STATISTICS)[-1]"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"statistical-analysis","dir":"Articles","previous_headings":"","what":"3. Statistical analysis","title":"Vignette of the GetFeatistics package","text":"bad far. actually start statistics, let’s put together data targeted untargeted analyses single dataframe, together also variables relevant samples (example epidemiological study, patient data age, BMI, sex, ). vignette use mock data df_example_sample_data contains three categorical variables two numerical variables. Moreover, let’s put together character vectors known molecule variables targeted analyses character vector feature names. Obviously, targeted untargeted experiments, don’t data join, can skip preparatory step go directly statistics.","code":"EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES <- df_example_sample_data %>%   left_join(TARGETED_RESULTS_FOR_STATISTICS, by = \"samples\") %>%   left_join(UNTARGETED_RESULTS_FOR_STATISTICS, by = \"samples\") ALL_POTENTIAL_COMPOUNDS <- c(TARGETED_MOLECULES, FEATURES_CONSIDERED)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"3. Statistical analysis","what":"3.1. Descriptive statistics","title":"Vignette of the GetFeatistics package","text":"ever wished table gives quick summary data mean median, /percentiles? Maybe also option separately group defined categorical variables (example control/disease groups)? dream come true gentab_descr function! Just put dataframe first argument, character vector name numerical variables interest second argument, name factor variable third argument. specify want type argument, example “median (5th; 95th percentile)”. Check full documentation tying ?gentab_descr know options setting defined number digital places, consider missing values. Don’t forget export external table export_the_table function ready used table next publication!","code":"EXAMPLE_DESCRIPTIVE_STATISTICS_RESULTS <- gentab_descr(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES,                                                        v = ALL_POTENTIAL_COMPOUNDS,                                                        f = \"factor_condition3lev\",                                                        type = \"median (5th; 95th percentile)\",                                                        ROUND = TRUE,                                                        dig = 3,                                                        unit_mes = NA,                                                        missing = \"only if >0\") export_the_table(EXAMPLE_DESCRIPTIVE_STATISTICS_RESULTS, exprtname = \"The_results_of_descriptive_statistics\", exprt_type = \"xlsx\")"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"data-normalisation","dir":"Articles","previous_headings":"3. Statistical analysis","what":"3.2. Data normalisation","title":"Vignette of the GetFeatistics package","text":"moving parametric inferential statistics, check data normally distributed. three different ways: plot density plot check data distribution resembles Gaussian:  plot Q–Q plot, anchd check points within grey area graph:  apply Shapiro–Wilk tests: P-value less defined cut-(classical 0.05) means data normally distributed: time, need normalise metabolomics data. can one step transf_data function. little guide prepare arguments: statistical function package, put data frame interest, character vector name numerical columns interest first two arguments. missing_replace TRUE, NA data replaced minimum value variable, processed operation (“divide”, “multiply”, “exponentiate”) passed missing_repl_type value missing_repl_value. example, want replace missing values 1/5 minimum value, set missing_repl_type = “divide” missing_repl_value = 5. want replace missing values squared root minimum value, set missing_repl_type = “exponentiate” missing_repl_value = 1/2. log_transf TRUE, data log-transformed base logarithm value reported log_base (choose exp(1) natural logarithm). “mean_scale”: data subtracted mean; “auto_scale”: data subtracted mean divided standard deviation; “pareto_scale”: data subtracted mean divided squared root standard deviation; “range_scale”: data subtracted mean divided difference maximum minimum values. output table columns containing transformed values, automatically get names columns separate objects saved global environment, can specify vect_names_transf TRUE starting part name object name_vect_names Hopefully running example make things clear: Look column names object: “_mr” added missing value replaced, “_ln” log-transformation, “paretosc” pareto scaling: name also saved different objects: decided create function way explicates results different steps transformations, compare access complete information case need. …realised dataframe can just many columns!! clean data interest, without wired suffix, just run function: clean_transf_colnames Voilà! need, transformed, cleaned names!","code":"DENSITY_PLOTS <- test_normality_density_plot(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES, v = ALL_POTENTIAL_COMPOUNDS) DENSITY_PLOTS[[1]] QQPLOT <- test_normality_q_q_plot(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES, v = ALL_POTENTIAL_COMPOUNDS) QQPLOT[[1]] SHAPIRO_TABLE <- test_normality_Shapiro_table(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES, v = ALL_POTENTIAL_COMPOUNDS, pvalcutoff = 0.05, cutpval = FALSE) SHAPIRO_TABLE #> # A tibble: 10 × 4 #>    variable   shap_test_result shap_test_pvalue normally_distributed #>    <chr>                 <dbl>            <dbl> <lgl>                #>  1 molecule01            0.602         1.26e-10 FALSE                #>  2 molecule02            0.863         2.64e- 5 FALSE                #>  3 molecule03            0.880         8.18e- 5 FALSE                #>  4 molecule04            0.897         2.84e- 4 FALSE                #>  5 feature002            0.775         1.62e- 7 FALSE                #>  6 feature003            0.698         4.86e- 9 FALSE                #>  7 feature004            0.636         4.26e-10 FALSE                #>  8 feature005            0.802         6.50e- 7 FALSE                #>  9 feature007            0.850         1.12e- 5 FALSE                #> 10 feature009            0.945         2.42e- 2 FALSE EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf <-  transf_data(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES,                                                               v = ALL_POTENTIAL_COMPOUNDS,                                                               missing_replace = TRUE,                                                               missing_repl_type = \"divide\",                                                               missing_repl_value = 5,                                                               log_transf = TRUE,                                                               log_base = exp(1),                                                               scaling = TRUE,                                                               scaling_type = \"pareto_scale\",                                                               vect_names_transf = TRUE,                                                               name_vect_names = \"ALL_POTENTIAL_COMPOUNDS_transf\") glimpse(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf) #> Rows: 52 #> Columns: 47 #> $ samples                   <chr> \"unkwon_sample_001\", \"unkwon_sample_002\", \"u… #> $ factor_condition2lev      <fct> F2A, F2A, F2A, F2A, F2A, F2A, F2A, F2A, F2A,… #> $ factor_condition3lev      <fct> F3A, F3A, F3A, F3A, F3A, F3A, F3A, F3A, F3A,… #> $ factor_condition4lev      <fct> F4A, F4A, F4A, F4A, F4A, F4A, F4A, F4A, F4A,… #> $ numerical_condition_a     <dbl> 4144.84, 2730.27, 1830.29, 3890.55, 1894.76,… #> $ numerical_condition_b     <dbl> 4.9, 4.0, 5.9, 6.1, 14.8, 27.1, 23.0, 23.8, … #> $ sample_type               <chr> \"unknown\", \"unknown\", \"unknown\", \"unknown\", … #> $ molecule01                <dbl> 64.01434, 35.47336, 163.16339, 172.53414, 90… #> $ molecule02                <dbl> 71.660272, 45.573955, 30.358801, 72.010810, … #> $ molecule03                <dbl> 0.036142724, 0.437926820, 0.290853901, 0.014… #> $ molecule04                <dbl> 78.6898920, 52.6804134, 37.6598743, 79.10643… #> $ feature002                <dbl> 1041717, 1838405, 1833003, 2283669, 2295150,… #> $ feature003                <dbl> 123288, 178957, 147968, 136045, 156292, 1620… #> $ feature004                <dbl> 9409, 7624, 8385, 7474, 8628, 8940, 7626, 85… #> $ feature005                <dbl> 115952, 104632, 106887, 241976, 43063, 15679… #> $ feature007                <dbl> 43897, 36940, 185687, 134781, 39105, 228596,… #> $ feature009                <dbl> 27104212, 39761464, 25144541, 32142174, 2883… #> $ molecule01_mr             <dbl> 64.01434, 35.47336, 163.16339, 172.53414, 90… #> $ molecule02_mr             <dbl> 71.660272, 45.573955, 30.358801, 72.010810, … #> $ molecule03_mr             <dbl> 0.036142724, 0.437926820, 0.290853901, 0.014… #> $ molecule04_mr             <dbl> 78.6898920, 52.6804134, 37.6598743, 79.10643… #> $ feature002_mr             <dbl> 1041717, 1838405, 1833003, 2283669, 2295150,… #> $ feature003_mr             <dbl> 123288, 178957, 147968, 136045, 156292, 1620… #> $ feature004_mr             <dbl> 9409, 7624, 8385, 7474, 8628, 8940, 7626, 85… #> $ feature005_mr             <dbl> 115952, 104632, 106887, 241976, 43063, 15679… #> $ feature007_mr             <dbl> 43897, 36940, 185687, 134781, 39105, 228596,… #> $ feature009_mr             <dbl> 27104212, 39761464, 25144541, 32142174, 2883… #> $ molecule01_mr_ln          <dbl> 4.159107, 3.568782, 5.094752, 5.150595, 4.51… #> $ molecule02_mr_ln          <dbl> 4.271937, 3.819336, 3.413086, 4.276816, 3.30… #> $ molecule03_mr_ln          <dbl> -3.3202796, -0.8257035, -1.2349342, -4.26511… #> $ molecule04_mr_ln          <dbl> 4.365515, 3.964244, 3.628595, 4.370794, 3.53… #> $ feature002_mr_ln          <dbl> 13.85638, 14.42441, 14.42147, 14.64129, 14.6… #> $ feature003_mr_ln          <dbl> 11.72228, 12.09490, 11.90475, 11.82074, 11.9… #> $ feature004_mr_ln          <dbl> 9.149422, 8.939056, 9.034200, 8.919186, 9.06… #> $ feature005_mr_ln          <dbl> 11.660932, 11.558205, 11.579527, 12.396594, … #> $ feature007_mr_ln          <dbl> 10.68960, 10.51705, 12.13182, 11.81141, 10.5… #> $ feature009_mr_ln          <dbl> 17.11520, 17.49841, 17.04015, 17.28568, 17.1… #> $ molecule01_mr_ln_paretosc <dbl> -0.095654618, -0.766251137, 0.967217623, 1.0… #> $ molecule02_mr_ln_paretosc <dbl> 1.08532715, 0.58954061, 0.14452697, 1.090672… #> $ molecule03_mr_ln_paretosc <dbl> -2.9491548, -1.4902254, -1.7295601, -3.50173… #> $ molecule04_mr_ln_paretosc <dbl> 0.90019580, 0.51688222, 0.19625440, 0.905239… #> $ feature002_mr_ln_paretosc <dbl> -1.7080635, -1.3542181, -1.3560513, -1.21911… #> $ feature003_mr_ln_paretosc <dbl> -2.297112, -2.089123, -2.195260, -2.242153, … #> $ feature004_mr_ln_paretosc <dbl> -2.1304636, -2.2603710, -2.2016170, -2.27264… #> $ feature005_mr_ln_paretosc <dbl> 0.137588664, 0.040306189, 0.060498877, 0.834… #> $ feature007_mr_ln_paretosc <dbl> -0.59936838, -0.85153551, 1.50829588, 1.0400… #> $ feature009_mr_ln_paretosc <dbl> 0.13079507, 0.66197920, 0.02676705, 0.367105… ALL_POTENTIAL_COMPOUNDS_transf_mr #>  [1] \"molecule01_mr\" \"molecule02_mr\" \"molecule03_mr\" \"molecule04_mr\" #>  [5] \"feature002_mr\" \"feature003_mr\" \"feature004_mr\" \"feature005_mr\" #>  [9] \"feature007_mr\" \"feature009_mr\" ALL_POTENTIAL_COMPOUNDS_transf_mr_ln #>  [1] \"molecule01_mr_ln\" \"molecule02_mr_ln\" \"molecule03_mr_ln\" \"molecule04_mr_ln\" #>  [5] \"feature002_mr_ln\" \"feature003_mr_ln\" \"feature004_mr_ln\" \"feature005_mr_ln\" #>  [9] \"feature007_mr_ln\" \"feature009_mr_ln\" ALL_POTENTIAL_COMPOUNDS_transf_mr_ln_paretosc #>  [1] \"molecule01_mr_ln_paretosc\" \"molecule02_mr_ln_paretosc\" #>  [3] \"molecule03_mr_ln_paretosc\" \"molecule04_mr_ln_paretosc\" #>  [5] \"feature002_mr_ln_paretosc\" \"feature003_mr_ln_paretosc\" #>  [7] \"feature004_mr_ln_paretosc\" \"feature005_mr_ln_paretosc\" #>  [9] \"feature007_mr_ln_paretosc\" \"feature009_mr_ln_paretosc\" EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned <- clean_transf_colnames(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf,                                                                                v = ALL_POTENTIAL_COMPOUNDS,                                                                                suffix_to_consider = \"_mr_ln_paretosc\") glimpse(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned) #> Rows: 52 #> Columns: 17 #> $ samples               <chr> \"unkwon_sample_001\", \"unkwon_sample_002\", \"unkwo… #> $ factor_condition2lev  <fct> F2A, F2A, F2A, F2A, F2A, F2A, F2A, F2A, F2A, F2A… #> $ factor_condition3lev  <fct> F3A, F3A, F3A, F3A, F3A, F3A, F3A, F3A, F3A, F3A… #> $ factor_condition4lev  <fct> F4A, F4A, F4A, F4A, F4A, F4A, F4A, F4A, F4A, F4A… #> $ numerical_condition_a <dbl> 4144.84, 2730.27, 1830.29, 3890.55, 1894.76, 299… #> $ numerical_condition_b <dbl> 4.9, 4.0, 5.9, 6.1, 14.8, 27.1, 23.0, 23.8, 24.8… #> $ sample_type           <chr> \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unk… #> $ molecule01            <dbl> -0.095654618, -0.766251137, 0.967217623, 1.03065… #> $ molecule02            <dbl> 1.08532715, 0.58954061, 0.14452697, 1.09067249, … #> $ molecule03            <dbl> -2.9491548, -1.4902254, -1.7295601, -3.5017350, … #> $ molecule04            <dbl> 0.90019580, 0.51688222, 0.19625440, 0.90523908, … #> $ feature002            <dbl> -1.7080635, -1.3542181, -1.3560513, -1.2191125, … #> $ feature003            <dbl> -2.297112, -2.089123, -2.195260, -2.242153, -2.1… #> $ feature004            <dbl> -2.1304636, -2.2603710, -2.2016170, -2.2726418, … #> $ feature005            <dbl> 0.137588664, 0.040306189, 0.060498877, 0.8342616… #> $ feature007            <dbl> -0.59936838, -0.85153551, 1.50829588, 1.04004490… #> $ feature009            <dbl> 0.13079507, 0.66197920, 0.02676705, 0.36710523, …"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"univariate-statistics-with-2-groups","dir":"Articles","previous_headings":"3. Statistical analysis","what":"3.3. Univariate statistics with 2 groups","title":"Vignette of the GetFeatistics package","text":"Let’s compare differences two groups t-test. t-test numerical variable interest performed following function. Overall, need set arguments similar way functions package: full data frame first argument; character vector column names numerical variable interest second argument; name column categorical variable (since t-test, must categorical variable two levels) third argument; paired set TRUE paired t-test; FDR TRUE correcting p-vales multiple corrections across different features; cutPval TRUE, every p-value 0.001 replaced “<0.001”; groupdiff TRUE, additional columns specifying group higher mean also added table, significant differences considering cutoff specified pcutoff; filter_sign TRUE, differences p-value higher pcutoff filtered . can also perform Fold Change analysis! Differently t-test, Fold Change performed data scaling (don’t want data negative values Fold Change!). want replace missing values though. , performed already log-transformation can specified are_log_transf argument (TRUE, function fold-change substracting data instead ratio. Logarithmic properties rulez!). second_to_first_ratio TRUE implies want see effect group specified second level factor compared first; opposite happen FALSE. combining information t-test Fold Change analysis Volcano plot? can function Volcano_ttest_FC, takes input results gentab_P.t.test gentab_FC functions. can leave arguments default personalise , make sure read documentation ?Volcano_ttest_FC first!  also box-plots already, describe next section!","code":"EXAMPLE_T_TEST <- gentab_P.t.test(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                                   v = ALL_POTENTIAL_COMPOUNDS,                                   f = \"factor_condition2lev\",                                   paired = FALSE,                                   FDR = TRUE,                                   cutPval = FALSE,                                   groupdiff = TRUE,                                   pcutoff = 0.05,                                   filter_sign = FALSE)  EXAMPLE_T_TEST #> # A tibble: 10 × 4 #>    variables   Pvalues PvaluesFDR group_diff #>    <chr>         <dbl>      <dbl> <chr>      #>  1 molecule01 1.85e- 7   4.62e- 7 F2A > F2B  #>  2 molecule02 4.24e- 1   7.07e- 1 NA         #>  3 molecule03 1.56e- 8   5.20e- 8 F2B > F2A  #>  4 molecule04 7.41e- 1   8.85e- 1 NA         #>  5 feature002 2.74e-46   2.74e-45 F2B > F2A  #>  6 feature003 4.06e- 3   8.13e- 3 F2B > F2A  #>  7 feature004 8.22e-17   4.11e-16 F2B > F2A  #>  8 feature005 8.85e- 1   8.85e- 1 NA         #>  9 feature007 8.00e- 1   8.85e- 1 NA         #> 10 feature009 7.22e- 1   8.85e- 1 NA EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_missing_repl <-  transf_data(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES,                                                                     v = ALL_POTENTIAL_COMPOUNDS,                                                                     missing_replace = TRUE,                                                                     missing_repl_type = \"divide\",                                                                     missing_repl_value = 5,                                                                     log_transf = FALSE,                                                                     scaling = FALSE,                                                                     vect_names_transf = TRUE,                                                                     name_vect_names = \"ALL_POTENTIAL_COMPOUNDS_missing_repl\")  EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_missing_repl_cleaned <- clean_transf_colnames(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_missing_repl,                                                                                      v = ALL_POTENTIAL_COMPOUNDS,                                                                                      suffix_to_consider = \"_mr\")  EXAMPLE_FC <- gentab_FC(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_missing_repl_cleaned,                         v = ALL_POTENTIAL_COMPOUNDS,                         f = \"factor_condition2lev\",                         second_to_first_ratio = TRUE,                         paired = FALSE,                         are_log_transf = FALSE,                         log_base = 2,                         filter_sign = FALSE,                         FCcutoff = 2)  EXAMPLE_FC #> # A tibble: 10 × 3 #>    variables       FC    logFC #>    <chr>        <dbl>    <dbl> #>  1 molecule01   0.319 -1.65    #>  2 molecule02   0.807 -0.309   #>  3 molecule03   6.04   2.59    #>  4 molecule04   0.842 -0.249   #>  5 feature002 155.     7.28    #>  6 feature003   0.883 -0.179   #>  7 feature004  60.7    5.92    #>  8 feature005   1.08   0.105   #>  9 feature007   0.910 -0.136   #> 10 feature009   1.01   0.00813 Volcano_plot_ttest_FC <- Volcano_ttest_FC(ttest_results = EXAMPLE_T_TEST,                                           FC_results = EXAMPLE_FC,                                           FDR = TRUE,                                           log_base = 2,                                           cut_off_names = -log10(0.05),                                           line1_position = -log10(0.05),                                           line2_position = -log10(0.0001),                                           names_to_plot = NULL,                                           category = NULL,                                           col_pal = NULL) Volcano_plot_ttest_FC"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"univariate-statistics-with-3-or-more-groups","dir":"Articles","previous_headings":"3. Statistical analysis","what":"3.4. Univariate statistics with 3 or more groups","title":"Vignette of the GetFeatistics package","text":"similarly t-test, can one-way ANOVA, posthocTukeyHSD pairwise group comparison. argument similar gentab_P.t.test function, obviously third one need put name categorical variable three levels: nice graphical visualisation distribution data can obtained following function generate boxplots:  Since generates list box plot variable interest. use export_figures export single pdf file: also prepared cool functions performs Fold Change analyses group pair! similar gentab_FC, also added argument only_on_positive can set TRUE want sure FC analysis performed positive data. Ah! …, just one-way ANOVA?? Two-ways ANOVA also option can obtained following function, specifying two categorical factor third argument want interactions interact argument: Great, last part chapter: merging statistics just obtained featINFO table untargeted study! , name package GetFeatistics (get features + statistics!!) can addINFO_to_table function: warnings got, tell us molecule mock target analyses find match featINFO, ’s correct course! glimpse content table: can finally export way:","code":"EXAMPLE_ANOVA_1WAY <-  gentab_P.1wayANOVA_posthocTukeyHSD(DF = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                                                            v = ALL_POTENTIAL_COMPOUNDS,                                                            f = \"factor_condition3lev\",                                                            FDR = TRUE,                                                            groupdiff = TRUE,                                                            pcutoff = 0.05,                                                            filter_sign = FALSE,                                                            cutPval = FALSE) glimpse(EXAMPLE_ANOVA_1WAY) #> Rows: 10 #> Columns: 12 #> $ Dependent                      <chr> \"molecule01\", \"molecule02\", \"molecule03… #> $ factor_condition3lev_Pvalue    <dbl> 1.215946e-03, 2.574197e-01, 2.153475e-3… #> $ F3B_vs_F3A_Pvalue              <dbl> 1.623657e-01, 2.376120e-01, 0.000000e+0… #> $ F3C_vs_F3A_Pvalue              <dbl> 0.0007683746, 0.5422966698, 0.000000000… #> $ F3C_vs_F3B_Pvalue              <dbl> 9.449651e-02, 8.558039e-01, 2.724086e-0… #> $ factor_condition3lev_PvalueFDR <dbl> 2.431892e-03, 3.677425e-01, 1.076738e-2… #> $ F3B_vs_F3A_PvalueFDR           <dbl> 2.706096e-01, 3.394457e-01, 0.000000e+0… #> $ F3C_vs_F3A_PvalueFDR           <dbl> 0.001536749, 0.774709528, 0.000000000, … #> $ F3C_vs_F3B_PvalueFDR           <dbl> 1.889930e-01, 9.841331e-01, 6.810215e-0… #> $ F3B_vs_F3A                     <chr> NA, NA, \"F3B > F3A\", NA, \"F3B > F3A\", \"… #> $ F3C_vs_F3A                     <chr> \"F3A > F3C\", NA, \"F3C > F3A\", NA, \"F3C … #> $ F3C_vs_F3B                     <chr> NA, NA, \"F3C > F3B\", NA, \"F3C > F3B\", \"… EXAMPLE_BOX_PLOTS <- getBoxplots(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                                  v = ALL_POTENTIAL_COMPOUNDS,                                  f = \"factor_condition3lev\") EXAMPLE_BOX_PLOTS[[1]] export_figures(EXAMPLE_BOX_PLOTS, exprtname_figures = \"All_the_amazing_boxplots\", exprt_fig_type = \"pdf\") EXAMPLE_multiple_FC <- gentab_FC_more_than2levels(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_missing_repl_cleaned,                                                   v = ALL_POTENTIAL_COMPOUNDS,                                                   f = \"factor_condition3lev\",                                                   second_to_first_ratio = TRUE,                                                   paired = FALSE,                                                   are_log_transf = FALSE,                                                   log_base = 2,                                                   only_on_positive = FALSE) glimpse(EXAMPLE_multiple_FC) #> Rows: 10 #> Columns: 7 #> $ variables        <chr> \"molecule01\", \"molecule02\", \"molecule03\", \"molecule04… #> $ F3A_vs_F3B_FC    <dbl> 0.6012417, 0.6853129, 145.8960113, 0.6952361, 69.0272… #> $ F3A_vs_F3B_logFC <dbl> -0.7339830, -0.5451652, 7.1887966, -0.5244251, 6.1090… #> $ F3A_vs_F3C_FC    <dbl> 0.3122194, 0.6735777, 356.2687121, 0.7191330, 168.164… #> $ F3A_vs_F3C_logFC <dbl> -1.67936792, -0.57008366, 8.47682198, -0.47566941, 7.… #> $ F3B_vs_F3C_FC    <dbl> 0.51929098, 0.98287615, 2.44193593, 1.03437242, 2.436… #> $ F3B_vs_F3C_logFC <dbl> -0.94538494, -0.02491845, 1.28802535, 0.04875571, 1.2… EXAMPLE_ANOVA_2WAY <-  gentab_P.2wayANOVA_posthocTukeyHSD(DF = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                                                            v = ALL_POTENTIAL_COMPOUNDS,                                                            f = c(\"factor_condition3lev\", \"factor_condition4lev\"),                                                            interact = FALSE,                                                            FDR = TRUE,                                                            groupdiff = TRUE,                                                            pcutoff = 0.05,                                                            filter_sign = FALSE,                                                            cutPval = FALSE) FINAL_FEAT_INFO_COMBINED_WITH_STATISTICS <- addINFO_to_table(df1 = EXAMPLE_ANOVA_2WAY,                                                                colfeat_df1 = \"Dependent\",                                                              dfINFO = UNTARGETED_FEAT_INFO_QC_FILTERED,                                                              colfeat_dfINFO = \"featname\",                                                              add_char_to_INFO = FALSE,                                                              char_to_add_to_INFO = \"_INFO\") #> Warning in addINFO_to_table(df1 = EXAMPLE_ANOVA_2WAY, colfeat_df1 = #> \"Dependent\", : no correspondence for molecule01, which is the row number 1 of #> the df1 #> Warning in addINFO_to_table(df1 = EXAMPLE_ANOVA_2WAY, colfeat_df1 = #> \"Dependent\", : no correspondence for molecule02, which is the row number 2 of #> the df1 #> Warning in addINFO_to_table(df1 = EXAMPLE_ANOVA_2WAY, colfeat_df1 = #> \"Dependent\", : no correspondence for molecule03, which is the row number 3 of #> the df1 #> Warning in addINFO_to_table(df1 = EXAMPLE_ANOVA_2WAY, colfeat_df1 = #> \"Dependent\", : no correspondence for molecule04, which is the row number 4 of #> the df1 glimpse(FINAL_FEAT_INFO_COMBINED_WITH_STATISTICS) #> Rows: 10 #> Columns: 42 #> $ featname                       <chr> NA, NA, NA, NA, \"feature002\", \"feature0… #> $ rt                             <dbl> NA, NA, NA, NA, 288, 408, 528, 465, 342… #> $ mz                             <dbl> NA, NA, NA, NA, 146.0451, 203.0822, 148… #> $ coumpound                      <chr> NA, NA, NA, NA, \"Glutamate\", NA, NA, \"P… #> $ rt_molecule_list               <dbl> NA, NA, NA, NA, 290, NA, NA, 471, NA, NA #> $ mz_molecule_list               <dbl> NA, NA, NA, NA, 146.0453, NA, NA, 164.0… #> $ CID                            <dbl> NA, NA, NA, NA, 33032, NA, NA, 6140, NA… #> $ AnnoLevel                      <chr> NA, NA, NA, NA, \"1\", NA, NA, \"1\", NA, NA #> $ rt_shift                       <dbl> NA, NA, NA, NA, -2, NA, NA, -6, NA, NA #> $ mz_shift                       <dbl> NA, NA, NA, NA, -2e-04, NA, NA, 2e-04, … #> $ Dependent                      <chr> \"molecule01\", \"molecule02\", \"molecule03… #> $ factor_condition3lev_Pvalue    <dbl> 2.903638e-04, 2.663669e-01, 7.957449e-2… #> $ factor_condition4lev_Pvalue    <dbl> 3.064275e-03, 6.145504e-01, 7.452104e-0… #> $ F3B_vs_F3A_Pvalue              <dbl> 0.1034203, 0.2463463, 0.0000000, 0.1071… #> $ F3C_vs_F3A_Pvalue              <dbl> 0.0001736245, 0.5505073106, 0.000000000… #> $ F3C_vs_F3B_Pvalue              <dbl> 0.053220429, 0.859040194, 0.003416264, … #> $ F4B_vs_F4A_Pvalue              <dbl> 0.1329561, 0.9999989, 0.8263569, 0.9994… #> $ F4C_vs_F4A_Pvalue              <dbl> 0.3763481, 0.9647013, 0.9995633, 0.9984… #> $ F4D_vs_F4A_Pvalue              <dbl> 0.9254239, 0.9573175, 0.9936826, 0.9909… #> $ F4C_vs_F4B_Pvalue              <dbl> 2.643875e-03, 9.617315e-01, 8.895006e-0… #> $ F4D_vs_F4B_Pvalue              <dbl> 0.4376553, 0.9604912, 0.9424541, 0.9776… #> $ F4D_vs_F4C_Pvalue              <dbl> 1.498325e-01, 7.820065e-01, 9.988015e-0… #> $ factor_condition3lev_PvalueFDR <dbl> 5.807275e-04, 3.805241e-01, 1.989362e-2… #> $ factor_condition4lev_PvalueFDR <dbl> 1.021425e-02, 8.669941e-01, 8.669941e-0… #> $ F3B_vs_F3A_PvalueFDR           <dbl> 0.1786649, 0.3519233, 0.0000000, 0.1786… #> $ F3C_vs_F3A_PvalueFDR           <dbl> 0.0003472491, 0.7864390152, 0.000000000… #> $ F3C_vs_F3B_PvalueFDR           <dbl> 0.106440857, 0.984814311, 0.008540661, … #> $ F4B_vs_F4A_PvalueFDR           <dbl> 0.4431869, 0.9999989, 0.9999989, 0.9999… #> $ F4C_vs_F4A_PvalueFDR           <dbl> 0.9995633, 0.9995633, 0.9995633, 0.9995… #> $ F4D_vs_F4A_PvalueFDR           <dbl> 0.9999925, 0.9999925, 0.9999925, 0.9999… #> $ F4C_vs_F4B_PvalueFDR           <dbl> 0.0088129161, 0.9999351962, 0.999935196… #> $ F4D_vs_F4B_PvalueFDR           <dbl> 0.9986349, 0.9986349, 0.9986349, 0.9986… #> $ F4D_vs_F4C_PvalueFDR           <dbl> 4.994418e-01, 9.999897e-01, 9.999897e-0… #> $ F3B_vs_F3A                     <chr> NA, NA, \"F3B > F3A\", NA, \"F3B > F3A\", \"… #> $ F3C_vs_F3A                     <chr> \"F3A > F3C\", NA, \"F3C > F3A\", NA, \"F3C … #> $ F3C_vs_F3B                     <chr> NA, NA, \"F3C > F3B\", NA, \"F3C > F3B\", \"… #> $ F4B_vs_F4A                     <chr> NA, NA, NA, NA, \"F4A > F4B\", NA, \"F4B >… #> $ F4C_vs_F4A                     <chr> NA, NA, NA, NA, \"F4C > F4A\", NA, \"F4C >… #> $ F4D_vs_F4A                     <chr> NA, NA, NA, NA, NA, NA, \"F4D > F4A\", NA… #> $ F4C_vs_F4B                     <chr> \"F4B > F4C\", NA, NA, NA, \"F4C > F4B\", N… #> $ F4D_vs_F4B                     <chr> NA, NA, NA, NA, \"F4D > F4B\", NA, \"F4D >… #> $ F4D_vs_F4C                     <chr> NA, NA, NA, NA, \"F4C > F4D\", NA, \"F4D >… export_the_table(FINAL_FEAT_INFO_COMBINED_WITH_STATISTICS)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"principal-component-analysis-and-heat-map-with-cluster-analysis","dir":"Articles","previous_headings":"3. Statistical analysis","what":"3.5. Principal Component Analysis, and Heat Map with Cluster Analysis","title":"Vignette of the GetFeatistics package","text":"section, show two functions cool multivariate data visualisation. function might look complex, don’t scared, ’ll explain everything need know! First , addition data frame used statistical analyses (df), can optionally pass another one (dfv) containing information metabolites (molecule categories). purpose vignette can prepare data frame factor variable indicating whether compound molecule targeted analysis feature untargeted experiment. Let’s look function Principal Component Analysis (PCA): getPCA. arguments df v saw (dataframe data names columns containing data, respectively). Remember use normalised data! s optional ’s name column samples names. Pass want names score plot. f, also optional, name column sample groups. Pass want color dots score plot based sample groups. dfv, optional, data frame compound information just created. sv fv, similarly s f optional column names dfv data frame names group want loading plot. even didn’t dfv fata frame, want names loading plot, just pass TRUE. col_pal col_pal_fv can used specified colors groups. specified defined colors used. Choose two PC want score loading plots passing . set ellipses_on_score /ellipses_on_loading also want create ellipses based groups. output functions list four objects: score loading plots ggplot objects, values principal components scores loading attached passed dataframes.   Great, now let’s see heat map without cluster analysis. first set arguments similar previous function, can specify multuple columns f fv, example can divide samples different groups. column passed, colored bars added top /left heatmap indicate groups. order_df_by /order_dfv_by can put names column order samples /features (arguments useful, completely ignored perform cluster analysis, see ) default trnsp TRUE features rows heatmap. opposite happen trnsp FALSE. cluster_rows cluster_columns can set TRUE perform cluster analyses. name_rows /name_columns, can set TRUE add labels arguments s /sv defined. rotate_name_columns usefull TRUE long names short space. three_heat_colors needs vector three colors: rectangles colored first color higher, last color lower. set_heat_colors_limits TRUE, maximum minimum value set colors rectangles (also ensure zero always referring middle color). really needed, though, data well normalised. color limits can also manually set heat_colors_limits. col_pal_list can left NULL use default colors grouping, list color can passed. Name element list element passed f /fv ensure matching.","code":"COMPOUNDS_INFO <- tibble(The_compounds = ALL_POTENTIAL_COMPOUNDS,                            type = factor(ifelse(grepl(\"feature\", ALL_POTENTIAL_COMPOUNDS), \"feat\", \"mol\"), levels = c(\"feat\", \"mol\"))) PCA_list <- getPCA(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                    v = ALL_POTENTIAL_COMPOUNDS,                    s = NULL,                    f = \"factor_condition2lev\",                    dfv = COMPOUNDS_INFO,                    sv = \"The_compounds\",                    fv = \"type\",                    labels_on_loading = TRUE,                    col_pal = NULL,                    col_pal_fv = NULL,                    PC_to_plot = c(\"PC1\", \"PC2\"),                    ellipses_on_score = TRUE,                    ellipses_on_loading = FALSE)  PCA_list$df_with_scores_table[,c(\"samples\", \"PC1\", \"PC2\", \"PC3\", \"PC4\", \"PC5\", \"PC6\", \"PC7\", \"PC8\", \"PC9\")] #> # A tibble: 52 × 10 #>    samples   PC1     PC2     PC3     PC4     PC5     PC6     PC7    PC8      PC9 #>    <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>  <dbl>    <dbl> #>  1 unkwon…  4.64  0.728  -0.213   0.0169  0.922  -0.715   0.0294 -0.153  0.540   #>  2 unkwon…  3.44  0.262  -0.419  -0.0292  1.63   -0.424  -0.850  -0.504  0.00892 #>  3 unkwon…  3.86 -0.181  -0.365  -0.502  -0.529   1.39    0.0287 -0.447  0.138   #>  4 unkwon…  5.01  1.08    0.0366 -0.416   0.0759  0.757   1.28   -0.343  0.413   #>  5 unkwon…  3.60 -0.598  -0.877   0.376   0.570  -0.506  -0.341  -0.791  0.0229  #>  6 unkwon…  3.80  0.356   0.0906 -0.611  -0.146   1.80   -0.272  -0.364  0.426   #>  7 unkwon…  3.83 -0.600  -1.01   -1.42    1.06    0.441  -0.253   0.887 -0.648   #>  8 unkwon…  3.72 -1.56   -1.81   -1.44   -1.94   -1.21   -0.325  -0.219  0.180   #>  9 unkwon…  4.09 -1.31   -1.15    0.752  -0.420   0.465   0.410  -0.753 -0.217   #> 10 unkwon…  3.85 -0.0997  0.0385  0.959   0.297  -0.0847 -0.302  -0.776 -0.259   #> # ℹ 42 more rows  PCA_list$dfv_with_loadings_table[,c(\"The_compounds\", \"PC1\", \"PC2\", \"PC3\", \"PC4\", \"PC5\", \"PC6\", \"PC7\", \"PC8\", \"PC9\")] #> # A tibble: 10 × 10 #>    The_compounds     PC1     PC2      PC3      PC4      PC5     PC6     PC7 #>    <chr>           <dbl>   <dbl>    <dbl>    <dbl>    <dbl>   <dbl>   <dbl> #>  1 molecule01     0.157  -0.0876  0.229    0.542   -0.597    0.182   0.328  #>  2 molecule02     0.0851  0.416   0.285    0.0684   0.0437  -0.139  -0.0452 #>  3 molecule03    -0.547  -0.0383  0.136    0.130   -0.0945   0.253  -0.699  #>  4 molecule04     0.0926  0.531   0.269    0.00501  0.00783  0.0321 -0.137  #>  5 feature002    -0.444   0.319  -0.436   -0.232   -0.0363  -0.0815  0.399  #>  6 feature003    -0.470  -0.304   0.674   -0.229    0.0732  -0.188   0.354  #>  7 feature004    -0.487   0.258  -0.195    0.410   -0.173    0.0121  0.146  #>  8 feature005     0.0597  0.521   0.305   -0.128    0.0656   0.134   0.0958 #>  9 feature007     0.0152 -0.0154 -0.00321 -0.484   -0.276    0.762   0.109  #> 10 feature009    -0.0397 -0.0530  0.0209   0.400    0.718    0.491   0.238  #> # ℹ 2 more variables: PC8 <dbl>, PC9 <dbl>  PCA_list$score_plot PCA_list$loading_plot HeatMap <- getHeatMap(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                       v = ALL_POTENTIAL_COMPOUNDS,                       s = \"samples\",                       f = c(\"factor_condition2lev\", \"factor_condition3lev\"),                       dfv = COMPOUNDS_INFO,                       sv = \"The_compounds\",                       fv = \"type\",                       order_df_by = NULL,                       order_dfv_by = NULL,                       trnsp = TRUE,                       cluster_rows = TRUE,                       cluster_columns = TRUE,                       name_rows = TRUE,                       name_columns = FALSE,                       rotate_name_columns = FALSE,                       three_heat_colors = c(\"magenta\", \"white\", \"cyan\"),                       set_heat_colors_limits = FALSE,                       heat_colors_limits = NULL,                       col_pal_list = list(factor_condition3lev = c(\"magenta4\", \"skyblue1\", \"lightgreen\"),                                           type = c(mol = \"pink\", feat = \"brown\"))) HeatMap"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"linear-models","dir":"Articles","previous_headings":"3. Statistical analysis","what":"3.6. Linear models","title":"Vignette of the GetFeatistics package","text":"now, gem package statistical approach personally like : multiple regression linear models!! cool part linear model can assess association variables taking account multiple potential confounding factors. single function, called: gentab_lm_long. within function can distinguish three modes, specified mdl argument: “lm”: linear models (fixed effects), using lm function stats package. Usually, multivariate linear model can built, example, formula like : dependent_variable ~ independent_variable1 + independent_variable2 + independent_variable3 function, different linear models fitted, one dependent variable interest. Usually consider dependent variable measured molecule/feature. - previosu function, put full data frame first argument character vector numeric variable names considered dependent variables; - Now, pay attention third argument, form_ind: need put everything put ~ formula. Like: “independent_variable1 + independent_variable2 + independent_variable3”. must names columns numeric factor variables dataframe; - var_perc TRUE, besides slope, additional column variation percentage added. data dependent variables log-transformed scaled correctly operation. variation percentage calculated way: (((base^beta)-1)*100). base logaritm provided base argument (exp(1) 2.718282… natural logaritm). - Similarly previously described functions, FDR TRUE add multiple correction p-value, filter_sign TRUE keep results p-value indicate pcutoff cutPval TRUE replace p-value<0.001 “<0.001”. Let’s glimpse table got : - line, columns dependent independent. Among independents, “(Intercept)”, doesn’t really biological significance. categorical variables, independent contain name non-reference group. example, variable factor_condition3lev 3 levels: “F3A”, “F3B”, “F3C”; Since “F3A” reference category, independent contain: “factor_condition3levF3B”, tell us association dependent variable F3B vs F3A, “factor_condition3levF3C”, explaining happens comparing F3C vs F3A. - N_observations: check tell us many observations used linear model. - beta slope dependent independent variables, beta_95confint_lower beta_95confint_upper lower upper limit 95% confidence interval beta, SE standard error ; adj_R_sqrd adjuster R squared model. - Pvalue FDR_Pvalue p-value referred beta significantly different zero. - negative_log10p negative_log10fdr negative log-transformed (base 10) P-values (usefull VOlcano plots, see later) - variation_perc calculated variation percentage great data Volcano plot! Considering independent variable, Volcano plot allow us see associations dependent variables : put linear models table results first argument; independent variable name second argument; third fourth augment, put want x-axis (usually “beta” “variation_perc”) y-axis (“negative_log10p” “negative_log10fdr”); set dep_cat TRUE specify category column table categorization dependent variables (example class molecules), dots differently colored based categories; names dependent variables Y-valuegrater cut_off_names shown (whant names P-value lower 0.0001, can put -log10(0.0001)); line1 /line2 set TRUE, additional horizontal dotted lines reported line1_position /line2_position.  usual, can easily export way: Pay attention: want generate Volcano plot appreciate association categorical variable, remember name independent variables includes also group want check (compared reference group):  “lmer”: linear models mixed effects (random fixed), using lmer function lme4 package. models particularly useful want include co-variates contain observations independently (use random effect case). example, time series analyses patients, variable identifying patients considered independent variable random effects way: dependent_variable ~ independent_variable1 + independent_variable2 + (1|variable_with_random_effects) Just , everything “~” passed third argument gentab_lm_long function (multiple models fitted, dependent variable passed second argument): “tobit”: TOBIT linear models, using tobit function AER package. Particularly useful targeted analyses, Tobit models useful treat dependent variable categorical continuous variables. particular, value Lower Limit Detection analytical method, can pass left-censored values; values higher Upper Limit Detection, can specify right censored values. left_cens right_cens arguments made : can pass named numeric vector values (names vector must dependent variables). course transformed data, transform data well:","code":"EXAMPLE_LINEAR_MODEL <- gentab_lm_long(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                                        dep = ALL_POTENTIAL_COMPOUNDS,                                        form_ind = \"factor_condition2lev + factor_condition3lev + numerical_condition_a + numerical_condition_b\",                                        mdl = \"lm\",                                        var_perc = TRUE,                                        base = exp(1),                                        FDR = TRUE,                                        filter_sign = FALSE,                                        pcutoff = 0.05,                                        cutPval = FALSE) glimpse(EXAMPLE_LINEAR_MODEL) #> Rows: 60 #> Columns: 13 #> $ Dependent            <chr> \"feature003\", \"feature002\", \"molecule03\", \"featur… #> $ Independent          <chr> \"(Intercept)\", \"(Intercept)\", \"(Intercept)\", \"(In… #> $ N_observations       <int> 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 5… #> $ beta                 <dbl> -2.16471000, -1.44534693, -2.00260774, -1.7145888… #> $ beta_95confint_lower <dbl> -2.275528779, -1.624986904, -2.349320186, -2.1992… #> $ beta_95confint_upper <dbl> -2.05389122, -1.26570695, -1.65589530, -1.2299462… #> $ SE                   <dbl> 0.05505441, 0.08924456, 0.17224562, 0.24076890, 0… #> $ adj_R_sqrd           <dbl> 0.99469949, 0.98265234, 0.94304115, 0.87591788, 0… #> $ Pvalue               <dbl> 4.708802e-37, 1.256317e-20, 2.728724e-15, 5.99511… #> $ FDR_Pvalue           <dbl> 4.708802e-36, 6.281586e-20, 9.095747e-15, 1.49877… #> $ negative_log10p      <dbl> 36.32708957, 19.90090070, 14.56404035, 8.22220279… #> $ negative_log10fdr    <dbl> 35.32708957, 19.20193069, 14.04116161, 7.82426278… #> $ variation_perc       <dbl> -88.521678, -76.433570, -86.501718, -81.996228, -… EXAMPLE_VOLCANO_PLOT_1 <- Volcano_lm(tab = EXAMPLE_LINEAR_MODEL,                                      ind_main = \"numerical_condition_a\",                                      x_values = \"variation_perc\",                                      y_values = \"negative_log10fdr\",                                      dep_cat = FALSE,                                      category = NULL,                                      cut_off_names = -log10(0.05),                                      line1 = TRUE,                                      line1_position = -log10(0.05),                                      line2 = FALSE)  EXAMPLE_VOLCANO_PLOT_1 export_figures(EXAMPLE_VOLCANO_PLOT_1, exprt_fig_type = \"png\", plot_sizes = c(14, 14), plot_unit = \"in\") EXAMPLE_VOLCANO_PLOT_2 <- Volcano_lm(tab = EXAMPLE_LINEAR_MODEL,                                      ind_main = \"factor_condition2levF2B\",                                      x_values = \"variation_perc\",                                      y_values = \"negative_log10fdr\",                                      dep_cat = FALSE,                                      category = NULL,                                      cut_off_names = -log10(0.05),                                      line1 = TRUE,                                      line1_position = -log10(0.05),                                      line2 = FALSE)  EXAMPLE_VOLCANO_PLOT_2 EXAMPLE_MIXED_LINEAR_MODEL <- gentab_lm_long(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                                              dep = ALL_POTENTIAL_COMPOUNDS,                                              form_ind = \"factor_condition2lev + numerical_condition_a + (1|factor_condition4lev)\",                                              mdl = \"lmer\",                                              var_perc = TRUE,                                              base = exp(1),                                              FDR = TRUE,                                              filter_sign = FALSE,                                              pcutoff = 0.05,                                              cutPval = FALSE) LOD_molecules_ln_paretosc <- c(molecule01 = (log(10)-mean(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule01)))/sqrt(sd(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule01))),                                molecule02 = (log(100)-mean(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule02)))/sqrt(sd(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule02))),                                molecule03 = (log(1)-mean(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule03)))/sqrt(sd(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule03))),                                molecule04 = (log(10)-mean(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule04)))/sqrt(sd(log(EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES$molecule04))))  EXAMPLE_TOBIT_LINEAR_MODEL <- gentab_lm_long(df = EXAMPLE_TABLE_FOR_STATISTICAL_ANALYSES_transf_cleaned,                                              dep = c(\"molecule01\", \"molecule02\", \"molecule03\", \"molecule04\"),                                              form_ind = \"factor_condition2lev + numerical_condition_a\",                                              mdl = \"tobit\",                                              left_cens = LOD_molecules_ln_paretosc,                                              right_cens = NULL,                                              var_perc = TRUE,                                              base = exp(1),                                              FDR = TRUE,                                              filter_sign = FALSE,                                              pcutoff = 0.05,                                              cutPval = FALSE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"pathway-enrichment-analysis","dir":"Articles","previous_headings":"3. Statistical analysis","what":"3.7. Pathway Enrichment Analysis","title":"Vignette of the GetFeatistics package","text":"perform Pathway Enrichment Analysis, need first KEGG codes known molecules. , don’t need manually look , function also , course: getChemData add_ChemData_to_featINFO .basically function, second one specifically coded add retrieved chemical data featINFO table, ’ll looking arguments: featINFO: feat table want augment chemical data. name_column_id: name column featINFO containing starting identifier, needs indicated next argument. idtype: type identifier reported column name_column_id featINFO table. must one following: “CID”, “SMILES”, “InChI”, “InChIKey”. (Just know: “CID”, function already use retrieving following chemical data PubChem; otherwise, first retrieve CID, use ). properties: can NULL (default), “”, character vector chemical properties retrieved PubChem (example: “Title”, “SMILES”, “InChI”, “InChIKey”, “IUPACName”, “MolecularWeight”, “ExactMass”, “MonoisotopicMass”) . otheridentifiers: NULL (default), “”, character vector desired identifiers want retrieve PubChem, “CAS”, “HMDB”, “KEGG”, “ChEBI”, “ChEMBL”, “DrugBank”, “DSSTox”. synonyms NULL (default) integer number number synonyms want retrieve PubChem (max 999!) ClassiFire NULL (default), “”, character vector wanted classification levels ClassiFireR, : “kingdom”, “superclass”, “class”, “subclass”, “level 5”, “level 6”, “level 7”, “level 8”. Ah, need stable internet connection run function! can take quite time hundreds compounds fetch! , pathway enrichment analysis can performed following workflow package using tool FELLA (https://doi.org/10.1186/s12859-018-2487-5). wrapped everything need function do_FELLA_enrichment_analysis: organism_code three letter code organism. “hsa” human (https://www.genome.jp/kegg/tables/br08606.html). KEGG_codes KEGG codes metabolites interest (like one found statistically significant). path_databases FELLA database don’t already, automatically created. function creating objects global environment also exporting csv table png picture working directory. output_prefix output_suffix can add characters object file names.","code":"FINAL_FEAT_INFO_COMBINED_WITH_STATISTICS_WITH_KEGG <- add_ChemData_to_featINFO(featINFO = FINAL_FEAT_INFO_COMBINED_WITH_STATISTICS,                                                                                name_column_id = \"CID\",                                                                                idtype = \"CID\",                                                                                otheridentifiers = \"KEGG\") do_FELLA_enrichment_analysis(organism_code = \"hsa\",                              KEGG_codes = FINAL_FEAT_INFO_COMBINED_WITH_STATISTICS_WITH_KEGG$KEGG,                              path_databases = \"C:/databases/FELLA/\",                              output_prefix = \"FELLA_enrichment_an_\",                              output_suffix = \"\")"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"miscellaneous","dir":"Articles","previous_headings":"","what":"4. Miscellaneous","title":"Vignette of the GetFeatistics package","text":"miscellaneous functions prepared can generically useful. already mentioned getChemData (particularly wrapper add_ChemData_to_featINFO). adjust variable sample names like: zero_prefixing (get names ordered name correctly), fix_duplicated, fix_names (remove special characters) related check_if_fix_names_needed. also particularly proud get_phase_amount (know exact amount mobile phases needed gradient) GetCombined_featTable_MSDial (combine three feature intensity tables different batches single one) particularly speak details merge_results. Suppose perform untargeted analyses, statistical analyses, different combinations chromatographic runs mass polarity (HILIC POS, RPLC NEG). Wouldn’t like combine results single table? wish granted merge_results: combine result tables list, pass results_list sample names different batches analyses identical, except string (example: “SAMPLE_NAME1_HILIC_POS”, “SAMPLE_NAME2_HILIC_POS”…), pass strings_in_colnames_to_remove need remove make sample names idendical. reference column used look duplicates (example compound names) passed by_column. example want keep one unique compound different result tables. prioritise feature table taking compound? specifying if_duplicated_consider_columns. Can one, example look one lowest “PvaluesFDR”, case tie, look “Pvalues”. column passed if_duplicated_consider_columns, want raking decreasing order set decreasing TRUE. example p-values want prioritise lower p-values first, decreasing set FALSE new table returned column called name_new_column combined results (also printing happpened case duplicated console!)","code":"MERGED_TABLE <- merge_results(results_list = list(HILIC_POS = _A_DF_WTIH_RESULTS_, RPLC_NEG = _ANOTHER_DF_WITH_RESULTS_),                               strings_in_colnames_to_remove = c(\"HILIC_POS\", \"RPLC_NEG\"),                               by_column = \"variables\",                               if_duplicated_consider_columns = c(\"PvaluesFDR\", \"Pvalues\"),                               decreasing = c(FALSE, FALSE),                               name_new_column = \"chromatographic_run\")"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html","id":"conclusion","dir":"Articles","previous_headings":"4. Miscellaneous","what":"Conclusion","title":"Vignette of the GetFeatistics package","text":"hope enjoying GetFeatistics package! Don’t forget check full documentation function. don’t forget cite use elaborations! Finally, thank reporting issue bug might encounter using package!","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gianfranco Frigerio. Author, maintainer.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Frigerio G (2025). GetFeatistics: Getting streamlined elaboration metabolomics data. R package version 0.3.3.6, https://frigeriogianfranco.github.io/GetFeatistics/.","code":"@Manual{,   title = {GetFeatistics: Getting streamlined elaboration of metabolomics data},   author = {Gianfranco Frigerio},   year = {2025},   note = {R package version 0.3.3.6},   url = {https://frigeriogianfranco.github.io/GetFeatistics/}, }"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/index.html","id":"getfeatistics","dir":"","previous_headings":"","what":"GetFeatistics","title":"Getting streamlined elaboration of metabolomics data","text":"Getting streamlined elaboration targeted non-targeted metabolomics data, including elaboration feature tables, separate QC processing, advanced statistics multiple regression linear models mixed effects, ! GetFeatistics (GF) package!","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/index.html","id":"first-install-it","dir":"","previous_headings":"","what":"First: Install it!","title":"Getting streamlined elaboration of metabolomics data","text":"installing package, can simply run code. Let know doesn’t work!","code":"if (!require(\"devtools\", quietly = TRUE)) {     install.packages(\"devtools\") }  devtools::install_github(\"FrigerioGianfranco/GetFeatistics\", dependencies = TRUE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/index.html","id":"then-use-it","dir":"","previous_headings":"","what":"Then, use it!","title":"Getting streamlined elaboration of metabolomics data","text":"Just type: , example workflow provided following picture. Check also vignette guiding workflow step step: https://frigeriogianfranco.github.io/GetFeatistics/articles/GF_vignette.html details, full documentation functions: https://frigeriogianfranco.github.io/GetFeatistics/reference/ something clear, please contact !","code":"library(GetFeatistics)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/index.html","id":"lastly-cite-it","dir":"","previous_headings":"","what":"Lastly; Cite it!","title":"Getting streamlined elaboration of metabolomics data","text":"use package, please cite : Frigerio Gianfranco, GetFeatistics R-pacakge, (2024), GitHub repository, https://github.com/FrigerioGianfranco/GetFeatistics","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Getting streamlined elaboration of metabolomics data","text":"functions ideated, written, developed, tested, maintained Gianfranco Frigerio. work conducted Gianfranco Frigerio, work three different institutions: Center Omics Sciences (COSR), IRCCS San Raffaele Scientific Institute, Milan, Italy (researcher). Luxembourg Centre Systems Biomedicine (LCSB), University Luxembourg, Belvaux, Luxembourg (postdoctoral researcher). Department Clinical Sciences Community Health, University Milan, Fondazione IRCCS Ca’ Granda Ospedale Maggiore Policlinico, Milan, Italy (PhD student). Acknowledgement: people Proteomics Metabolomics group (ProMeFa) Center Omics Sciences (COSR), IRCCS San Raffaele Scientific Institute, acknowledged support. Albina Rastoder acknowledged helping testing functions 2 months internship Luxembourg Centre Systems Biomedicine (LCSB) University Luxembourg. Prof. Dr. Emma Schymanski thanked support suggestions, entire Environmental Cheminformatics group LCSB acknowledged help feedback. Prof. Dr. Silvia Fustinoni group Laboratory Environmental Industrial Toxicology Department Clinical Sciences Community Health, University Milan, Fondazione IRCCS Ca’ Granda Ospedale Maggiore Policlinico acknowledged support. Research funding: Funding support Luxembourg National Research Fund (FNR) project A18/BM/12341006 acknowledged.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/GetCombined_featTable_MSDial.html","id":null,"dir":"Reference","previous_headings":"","what":"Combining three tables of feature intensities in a combined table. — GetCombined_featTable_MSDial","title":"Combining three tables of feature intensities in a combined table. — GetCombined_featTable_MSDial","text":"Given three different tables feature intensities related featINFO tables, combines feature intensities single table.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/GetCombined_featTable_MSDial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combining three tables of feature intensities in a combined table. — GetCombined_featTable_MSDial","text":"","code":"GetCombined_featTable_MSDial(   featTable1,   featINFO1,   name1 = \"table1\",   featTable2,   featINFO2,   name2 = \"table2\",   featTable3,   featINFO3,   name3 = \"table3\",   mz_widow = 0.005,   rt_window = 2 )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/GetCombined_featTable_MSDial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combining three tables of feature intensities in a combined table. — GetCombined_featTable_MSDial","text":"featTable1 dataframe, containing feature intensities. featINFO1 dataframe, containing featINFO related featTable1. featTable2 dataframe, containing feature intensities. featINFO2 dataframe, containing featINFO related featTable2. featTable3 dataframe, containing feature intensities. featINFO3 dataframe, containing featINFO related featTable3. mz_widow numeric length 1. mass--charge ratio window within features grouped feature. rt_window numeric length 1. retention time window within within features grouped feature.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/GetCombined_featTable_MSDial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combining three tables of feature intensities in a combined table. — GetCombined_featTable_MSDial","text":"tibble. combined table feature intensities.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/QCs_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a dataset of features considering pooled quality control samples. — QCs_process","title":"Filter a dataset of features considering pooled quality control samples. — QCs_process","text":"Given dataframe feature intensities non-targeted experiment another dataframe containing information sample types, filters dataframe feature intensities  considering defined cut-quality control samples.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/QCs_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a dataset of features considering pooled quality control samples. — QCs_process","text":"","code":"QCs_process(   featmatrix,   sampletype,   sep_QC = FALSE,   QC_to_merge = NULL,   step1 = TRUE,   step1_cutoff = 50,   step2 = TRUE,   step2_cutoff = 50,   step3 = TRUE,   step3_cutoff = 50,   step4 = FALSE,   step4_cutoff = c(20, 80),   rtrn_filtered_table = TRUE,   remove_results = FALSE,   remove_QC_and_blanks = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/QCs_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a dataset of features considering pooled quality control samples. — QCs_process","text":"featmatrix dataframe feature intensities. first column contain feature name, columns related analysis sample contains feature intensities. sampletype dataframe containing two three columns: first one contains name samples reported featmatrix. second column contains, sample, one following: \"REMOVE\", samples discharged; \"blank\", blank samples; \"QC\", pooled quality control samples; \"QC_half\", pooled quality control samples diluted half; \"unknown\", samples. third column contain sample category considered sep_QC TRUE. sep_QC logical. TRUE, separate QC filtration performed. details check: Frigerio et al. 2022 https://doi.org/10.3390/molecules27082580. QC_to_merge charter vector. sep_QC TRUE, contain names groups pooled QC samples consider final merge filtered features step1 logical. Whether discharge features certain relative standard deviation percentage (RSD%) QCs, defined step1_cutoff step1_cutoff numeric length 1. step1 TRUE, features RSD% QCs value considered suitable. step2 logical. Whether discharge features certain QCs count%, defined step2_cutoff. step2_cutoff numeric length 1. step2 TRUE, features valid values (NA) less percentage QCs specified value considered suitable. step3 logical. Whether discharge features certain blank contribution%, defined step3_cutoff. step3_cutoff numeric length 1. step3 TRUE, features blank contribution % (calculated mean blank/mean QCs*100) higher value, considered suitable. step4 logical. Whether discharge features included certain range comparing QCs QC_half, defined step4_cutoff. step4_cutoff numeric length 2. step4 TRUE,features QC_half within percentage range comapred QCs considered suitable. rtrn_filtered_table logical. TRUE returns filtered table, FALSE returns non-filtered table (useful want check parameters QC CV% blank contribution features filtered) remove_results logical. TRUE, returns table features, FALSE, last columns report results QC CV% blank contribution remove_QC_and_blanks logical. end processing, TRUE remove columns containing QCs blanks (, also remove_results TRUE rtrn_filtered_table TRUE, end great table feature intensities samples ready next processing)","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/QCs_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a dataset of features considering pooled quality control samples. — QCs_process","text":"tibble feature intensities result QC processing","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Volcano plot from the table of linear regression models — Volcano_lm","title":"Generate a Volcano plot from the table of linear regression models — Volcano_lm","text":"Given table generated function gentab_lm_long, create Volcano plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Volcano plot from the table of linear regression models — Volcano_lm","text":"","code":"Volcano_lm(   tab,   ind_main,   x_values = \"variation_perc\",   y_values = \"negative_log10fdr\",   dep_cat = FALSE,   category = NULL,   cut_off_names = -log10(1e-04),   line1 = TRUE,   line1_position = -log10(0.05),   line2 = TRUE,   line2_position = -log10(1e-04),   col_pal = NULL )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Volcano plot from the table of linear regression models — Volcano_lm","text":"tab dataframe created function gentab_lm_long. ind_main character length 1. independent variable visualise Volcano plot. Important: factor variables, must name factor name level combined without space. e.g.: variable \"Sex\" level \"Female\", must pass \"SexFemale\". x_values character length 1. name column tab containing value plot x. y_values character length 1. name column tab containing value plot y. dep_cat logical. want color dependent variable based certain category? category character length 1. dep_cat TRUE, pass name column tab contains categorisation. cut_off_names numerical length 1. Names dependent variables shown cut-. line1 logical. want show horizontal dotted line? line1_position numerical length 1. line1 TRUE, pass y-value horizontal dotted line. line2 logical.  want show second horizontal dotted line? line2_position numerical length 1. line2 TRUE, pass y-value second horizontal dotted line. col_pal character vector containing colors. NULL, colors pals package used (see function build_long_vector_of_colors).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Volcano plot from the table of linear regression models — Volcano_lm","text":"ggplot object, Volcano plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_ttest_FC.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Volcano plot. — Volcano_ttest_FC","title":"Generate a Volcano plot. — Volcano_ttest_FC","text":"Given t-test analysis performed function gentab_P.t.test, Fold Change analyses performed function gentab_FC, gives Volcano plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_ttest_FC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Volcano plot. — Volcano_ttest_FC","text":"","code":"Volcano_ttest_FC(   ttest_results,   FC_results,   FDR = FALSE,   log_base = 2,   cut_off_names = -log10(0.05),   line1_position = -log10(0.05),   line2_position = NULL,   names_to_plot = NULL,   category = NULL,   col_pal = NULL )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_ttest_FC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Volcano plot. — Volcano_ttest_FC","text":"ttest_results data frame obtained function gentab_P.t.test. FC_results data frame obtained function gentab_FC. first column must contain elements first column ttest_results. FDR logical. TRUE, plot Y-axis value PvaluesFDR column ttest_results; FALSE, Pvalues. log_base numeric length 1. base logarithm used FC analysis. visualisation purpose shown x-axis label. cut_off_names NULL numerical length 1. names shown cut-y-axis. Pass 0 want see names. Pass NULL want see name. line1_position NULL numerical length 1. y-value horizontal dotted line. Pass NULL want . line2_position NULL numerical length 1. y-value second horizontal dotted line. Pass NULL want . names_to_plot NULL character length 1. name column containing names report plot. column name absent ttest_results, considered FC_results. NULL passed arguments, names taken first column ttest_results (elements must match first column FC_results). category NULL character length 1. name column containing groups color points. column name absent ttest_results, considered FC_results. NULL passed arguments, points black. col_pal NULL character vector containing colors. NULL, colors pals package used (see function build_long_vector_of_colors).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/Volcano_ttest_FC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Volcano plot. — Volcano_ttest_FC","text":"ggplot object Volcano plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/addINFO_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the information from featINFO to a table. — addINFO_to_table","title":"Add the information from featINFO to a table. — addINFO_to_table","text":"Given table containing data related features (example output statistical analyses) related featINFO table, combines everything single table.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/addINFO_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the information from featINFO to a table. — addINFO_to_table","text":"","code":"addINFO_to_table(   df1,   colfeat_df1,   dfINFO,   colfeat_dfINFO,   add_char_to_INFO = FALSE,   char_to_add_to_INFO = \"_INFO\" )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/addINFO_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the information from featINFO to a table. — addINFO_to_table","text":"df1 dataframe. table containing results (e.g. statistical analyses) feature. colfeat_df1 character length 1. name column df1 contains unique names features. dfINFO dataframe. featINFO table. colfeat_dfINFO character length 1. name column dfINFO contains unique names features. add_char_to_INFO logical. string character added column dfINFO? char_to_add_to_INFO character length 1. add_char_to_INFO TRUE, pass string character added column dfINFO.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/addINFO_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the information from featINFO to a table. — addINFO_to_table","text":"tibble. combined table containing also information feature.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/add_ChemData_to_featINFO.html","id":null,"dir":"Reference","previous_headings":"","what":"Add chemical data to a featINFO table. — add_ChemData_to_featINFO","title":"Add chemical data to a featINFO table. — add_ChemData_to_featINFO","text":"Given featINFO table, least column known identifier, first retrieves PubChem CID (unless passed identifier), gets PubChem desired proprieties identifiers, can also classify compounds based ClassiFire classification, adds featINFO table. function wrapper function getChemData.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/add_ChemData_to_featINFO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add chemical data to a featINFO table. — add_ChemData_to_featINFO","text":"","code":"add_ChemData_to_featINFO(   featINFO,   name_column_id,   idtype,   properties = NULL,   otheridentifiers = NULL,   synonyms = NULL,   ClassiFire = NULL )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/add_ChemData_to_featINFO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add chemical data to a featINFO table. — add_ChemData_to_featINFO","text":"featINFO data frame. featINFO table. name_column_id character length 1. Name column featINFO table containing identifiers. idtype character length 1. One following: \"CID\", \"SMILES\", \"InChI\", \"InChIKey\". type identifier containied column name_column_id featINFO. properties NULL character. \"\" passed, PubChem properties fetched. wanted properties might want get : \"Title\", \"SMILES\", \"InChI\", \"InChIKey\", \"IUPACName\", \"MolecularWeight\", \"ExactMass\", \"MonoisotopicMass\". know PubChem properties run all_PubChem_properties(), can also read full description : https://pubchem.ncbi.nlm.nih.gov/docs/pug-rest#section=Compound-Property-Tables. otheridentifiers NULL character. \"\" passed, identifiers available PubChem fetched. common identifiers might want pass : \"CAS\", \"HMDB\", \"KEGG\", \"ChEBI\", \"ChEMBL\", \"DrugBank\", \"DSSTox\". synonyms NULL integer. Inf passed, synonyms available PubChem fetched (maximum 999). Otherwise, pass number top synonyms reported PubChem retrieve. ClassiFire NULL character. \"\" passed, levels ClassiFire classification retrieved; otherwise can pass desired ones. levels : \"kingdom\", \"superclass\", \"class\", \"subclass\", \"level 5\", \"level 6\", \"level 7\", \"level 8\".","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/add_ChemData_to_featINFO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add chemical data to a featINFO table. — add_ChemData_to_featINFO","text":"featINFO data frame additional columns containing retrieved chemical data.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/all_PubChem_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"All PubChem properties — all_PubChem_properties","title":"All PubChem properties — all_PubChem_properties","text":"function generates vector PubChem properties. ones retrieved passing \"\" argument properties function getChemData.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/all_PubChem_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All PubChem properties — all_PubChem_properties","text":"","code":"all_PubChem_properties()"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/all_PubChem_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All PubChem properties — all_PubChem_properties","text":"character vector PubChem properties.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/auto_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-scale values — auto_scale","title":"Auto-scale values — auto_scale","text":"vector numbers, element subtracts mean divide standard deviation.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/auto_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-scale values — auto_scale","text":"","code":"auto_scale(x, na.rm = FALSE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/auto_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-scale values — auto_scale","text":"x numeric vector. na.rm logical. missing value stripped computation? (mean sd)","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/auto_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-scale values — auto_scale","text":"numeric vector scaled values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/build_long_vector_of_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a vector with colors. — build_long_vector_of_colors","title":"Build a vector with colors. — build_long_vector_of_colors","text":"creates vector containing 112 different colors pals package; particular following palettes, order: trubetskoy, glasbey, kelly, polychrome.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/build_long_vector_of_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a vector with colors. — build_long_vector_of_colors","text":"","code":"build_long_vector_of_colors()"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/build_long_vector_of_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a vector with colors. — build_long_vector_of_colors","text":"character vectors 112 different colors.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/check_if_fix_names_needed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if names can be fixed — check_if_fix_names_needed","title":"Check if names can be fixed — check_if_fix_names_needed","text":"checks names contain spaces special characters start number","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/check_if_fix_names_needed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if names can be fixed — check_if_fix_names_needed","text":"","code":"check_if_fix_names_needed(x)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/check_if_fix_names_needed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if names can be fixed — check_if_fix_names_needed","text":"x character vector.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/check_if_fix_names_needed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if names can be fixed — check_if_fix_names_needed","text":"logical vector, indicating element contains special characters start number","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/checkmolecules_in_feat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Check molecules in the feature table. — checkmolecules_in_feat_table","title":"Check molecules in the feature table. — checkmolecules_in_feat_table","text":"Given featINFO, feature intensities table, table list molecules known mass, looks molecule feature table.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/checkmolecules_in_feat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check molecules in the feature table. — checkmolecules_in_feat_table","text":"","code":"checkmolecules_in_feat_table(   featmatrix,   featinfo,   molecules_list,   mz_to_search = NULL,   error = 20,   error_type = \"ppm\",   check_rt = FALSE,   rt_to_search = NULL,   rt_window = 12,   return_as_featinfo_lev1 = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/checkmolecules_in_feat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check molecules in the feature table. — checkmolecules_in_feat_table","text":"featmatrix dataframe: first column featname, column sample feature intensities. row feature. (can obtained get_feat_table_from_MSDial get_feat_table_from_patRoon function). featinfo dataframe. table least three columns, order: feature names, retention times, mass--charge ratios. (can obtained get_feat_info_from_MSDial get_feat_info_from_patRoon function). molecules_list dataframe containing molecules search. first column must contain names molecule. Also, contain least another column m/z look . mz_to_search character vector length 1. column name molecules_list data-frame m/z values look (provided third column used). error numeric length 1. tolerance search m/z Da ppm (specified error_type argument) error_type one following: \"ppm\", \"Da\". referred value provided error argument. check_rt logical. also retention times checked? rt_to_search check_rt TRUE, column name molecules_list data-frame rt values look . (provided second column used) rt_window numeric length 1. retention time window consider centered known molecules check experimental ones. Please check unit (seconds minutes) tables. return_as_featinfo_lev1 logical. TRUE, also check_rt TRUE, function return featinfo found molecules level 1 AnnoLevel column.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/checkmolecules_in_feat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check molecules in the feature table. — checkmolecules_in_feat_table","text":"tibble matching feature intensities. return_as_featinfo_lev1 TRUE, output instead featinfo compounds found level 1 AnnoLevel column.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/clean_transf_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean colnames after transformation — clean_transf_colnames","title":"Clean colnames after transformation — clean_transf_colnames","text":"Right transf_data function, column names added additional names \"_transf_mr_ln_paretosc\", (means transformed missing values replaced, natural-log-transformed, pareto-scaled). function clean reduce dataframe order contain transformed variable interest.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/clean_transf_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean colnames after transformation — clean_transf_colnames","text":"","code":"clean_transf_colnames(df, v, suffix_to_consider = \"_mr_ln_paretosc\")"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/clean_transf_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean colnames after transformation — clean_transf_colnames","text":"df dataframa transf_data function. v character vector. element must correspond original column names df ideally passed previously function transf_data. suffix_to_consider character length 1. suffix columns variable use.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/clean_transf_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean colnames after transformation — clean_transf_colnames","text":"df transformed column interest, cleaned names.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/create_df_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create example datasets — create_df_examples","title":"Create example datasets — create_df_examples","text":"create mock datasets can used test functions package.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/create_df_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create example datasets — create_df_examples","text":"","code":"create_df_examples(   datasets = c(\"all\", \"df_example_generic\", \"df_example_targeted\",     \"df_example_targeted_legend\", \"df_example_targeted_compounds_legend\",     \"df_example_sample_data\", \"df_example_feat_intensities\", \"df_example_feat_info\",     \"df_example_qc_sampletype\", \"df_example_melecules_to_search\", \"df_example_gradient\") )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/create_df_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create example datasets — create_df_examples","text":"datasets one following: \"\", \"df_example_generic\", \"df_example_targeted\", \"df_example_targeted_legend\", \"df_example_targeted_compounds_legend\", \"df_example_sample_data\", \"df_example_feat_intensities\", \"df_example_feat_info\", \"df_example_qc_sampletype\", \"df_example_melecules_to_search\", \"df_example_gradient\". \"\", following dataframes (tibble) created different objects. df_example_generic: generic dataframe useful testing statistical functions. df_example_targeted: example first argument get_targeted_elaboration. df_example_targeted_legend: example second argument get_targeted_elaboration. df_example_targeted_compounds_legend: example third argument get_targeted_elaboration. df_example_sample_data: example metadata (additional variables besides molecular data, real life age, sex, BMI) can used test statistical functions. df_example_feat_intensities: example featTable, feature intensities. df_example_feat_info: example featINFO, retention times m/z. df_example_qc_sampletype: example table pass sampletype argument QCs_process function. df_example_melecules_to_search; example known standards pass third argument checkmolecules_in_feat_table. df_example_gradient: example get_phase_amount; features_data_example, example feature data table.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/create_df_examples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create example datasets — create_df_examples","text":"directly creates object(s) current environment.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/cutP.html","id":null,"dir":"Reference","previous_headings":"","what":"Cutting the P-value if < 0.001 — cutP","title":"Cutting the P-value if < 0.001 — cutP","text":"Returns \"< 0.001\" number less 0.001.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/cutP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cutting the P-value if < 0.001 — cutP","text":"","code":"cutP(x)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/cutP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cutting the P-value if < 0.001 — cutP","text":"x single number, must 0 1.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/cutP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cutting the P-value if < 0.001 — cutP","text":"single character","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/do_FELLA_enrichment_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FELLA Enrichment Analysis. — do_FELLA_enrichment_analysis","title":"Perform FELLA Enrichment Analysis. — do_FELLA_enrichment_analysis","text":"Given KEGG codes defined organism, performs enrichment analysis FELLA package.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/do_FELLA_enrichment_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FELLA Enrichment Analysis. — do_FELLA_enrichment_analysis","text":"","code":"do_FELLA_enrichment_analysis(   organism_code,   KEGG_codes,   path_databases = \"C:/databases/FELLA/\",   output_prefix = \"\",   output_suffix = \"\" )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/do_FELLA_enrichment_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FELLA Enrichment Analysis. — do_FELLA_enrichment_analysis","text":"organism_code character length 1. KEGG organism code. example, homo sapiens (human) 'hsa'. codes : https://www.genome.jp/kegg/tables/br08606.html. KEGG_codes Character. KEGG codes compounds. path_databases Character length 1. Path local organism databases. output_prefix Character length 1. add beginning generated file names object names. output_suffix Character length 1. add end generated file names object names.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/do_FELLA_enrichment_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FELLA Enrichment Analysis. — do_FELLA_enrichment_analysis","text":"Export csv table png file, along creating object global environment.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_figures.html","id":null,"dir":"Reference","previous_headings":"","what":"Export plots — export_figures","title":"Export plots — export_figures","text":"exports plot list plots created ggplot ggplot-like functions current working directory.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_figures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export plots — export_figures","text":"","code":"export_figures(   plots,   exprtname_figures = NULL,   exprt_fig_type = \"png\",   plot_sizes = c(NA, NA),   plot_unit = \"in\" )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_figures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export plots — export_figures","text":"plots plot list plots types \"gg\" \"ggplot\". exprtname_figures NULL character length 1. desired name file create (add file extension added automatically based next argument). NULL, name object passed argument plots used. exprt_fig_type one following: \"pdf\", \"eps\", \"ps\", \"tex\", \"jpeg\", \"tiff\", \"png\", \"bmp\", \"svg\", \"wmf\". desired type file create: \"pdf\" multuple plots, create single file plot different page; otherwise, use ggsave considering plot_sizes plot_unit arguments, create different picture plot plots. plot_sizes numeric vector length 2. contains width height saving figures png format. specified, use size current graphics device (ggsave function) plot_unit one following: \"\", \"cm\", \"mm\", \"px\". referred height plot_sizes argument (ggsave function)","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_figures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export plots — export_figures","text":"creates file(s) current working director.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_the_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the table — export_the_table","title":"Export the table — export_the_table","text":"exports data-frame matrix current working directory. use row names, exported (use column names!).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_the_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the table — export_the_table","text":"","code":"export_the_table(tab, exprtname = NULL, exprt_type = \"txt\")"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_the_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the table — export_the_table","text":"tab dataframe matrix. exprtname NULL character length 1. desired name file create (add file extension added automatically based next argument). NULL, name object passed argument tab used. exprt_type one following: \"txt\", \"csv\", \"xlsx\". desired type file create: text file values tab_separated (txt), text file values comma separated (csv), Excel file (xlsx).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/export_the_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the table — export_the_table","text":"creates file current working director.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_duplicated.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix duplicate names — fix_duplicated","title":"Fix duplicate names — fix_duplicated","text":"adds sequential numbers solve duplicates character vector.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_duplicated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix duplicate names — fix_duplicated","text":"","code":"fix_duplicated(   x,   zeros = TRUE,   define_highest_for_zeros = NULL,   start_with_zero = FALSE,   exclude_the_first = TRUE,   NA_as_character = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_duplicated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix duplicate names — fix_duplicated","text":"x character vector. zeros logical. leading zero added? define_highest_for_zeros NULL numeric integer length 1. zeros TRUE, can decide highest number define number zeros. argument NULL, highest number defined based highest number duplicated. start_with_zero logical. TRUE, first number added solving duplicated 0, FALSE 1. exclude_the_first logical. TRUE, suffix added second duplicated . NA_as_character logical. FALSE, missing values affected function, TRUE, missing values duplicated considered character \"NA\".","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_duplicated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix duplicate names — fix_duplicated","text":"single character duplicated solved, thus unique elements.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix names — fix_names","title":"Fix names — fix_names","text":"removes special characters character vector, useful modify column names. Spaces hyphens replaced underscore,","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix names — fix_names","text":"","code":"fix_names(x, if_start_with_number_add = \"m\")"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix names — fix_names","text":"x character vector. if_start_with_number_add character length 1. name start number, character indicated argument added beginning.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/fix_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix names — fix_names","text":"single character special character replaced.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_AnnoLevel_to_ordered_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an numeric vector from a factor vector of annotation levels. — from_AnnoLevel_to_ordered_number","title":"Get an numeric vector from a factor vector of annotation levels. — from_AnnoLevel_to_ordered_number","text":"Given factor vector annotation levels, creates numeric vector. Useful ranking.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_AnnoLevel_to_ordered_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an numeric vector from a factor vector of annotation levels. — from_AnnoLevel_to_ordered_number","text":"","code":"from_AnnoLevel_to_ordered_number(AnnoLevel_vector)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_AnnoLevel_to_ordered_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an numeric vector from a factor vector of annotation levels. — from_AnnoLevel_to_ordered_number","text":"AnnoLevel_vector factor vector, containing annotation levels.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_AnnoLevel_to_ordered_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an numeric vector from a factor vector of annotation levels. — from_AnnoLevel_to_ordered_number","text":"numeric vector ranking annotation levels.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_ordered_number_to_AnnoLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a factor vector of annotation levels from a numeric vector. — from_ordered_number_to_AnnoLevel","title":"Get a factor vector of annotation levels from a numeric vector. — from_ordered_number_to_AnnoLevel","text":"Given numeric vector, creates factor vector annotation levels. opposite from_AnnoLevel_to_ordered_number.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_ordered_number_to_AnnoLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a factor vector of annotation levels from a numeric vector. — from_ordered_number_to_AnnoLevel","text":"","code":"from_ordered_number_to_AnnoLevel(   AnnoLevel_as_ordered_number,   ident_levels = c(\"1\", \"2a\", \"2b\", \"3a\", \"3b\", \"3c\", \"4a\", \"5\") )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_ordered_number_to_AnnoLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a factor vector of annotation levels from a numeric vector. — from_ordered_number_to_AnnoLevel","text":"AnnoLevel_as_ordered_number numeric vector, containing annotation levels converted numeric. ident_levels character. levels factor vector created.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/from_ordered_number_to_AnnoLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a factor vector of annotation levels from a numeric vector. — from_ordered_number_to_AnnoLevel","text":"factor vector annotation levels.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Table with Fold Change — gentab_FC","title":"Generate a Table with Fold Change — gentab_FC","text":"Given dataframe set numerical variables dataframe, performs fold changes analysis desired variable creates new table.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Table with Fold Change — gentab_FC","text":"","code":"gentab_FC(   df,   v,   f,   second_to_first_ratio = TRUE,   paired = FALSE,   are_log_transf = FALSE,   log_base = 2,   filter_sign = FALSE,   FCcutoff = 2 )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Table with Fold Change — gentab_FC","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values. f character vector length 1. Name column df containing factor variable (must exactly 2 levels) considered performing Fold Change analysis. second_to_first_ratio logical. TRUE second group/first group ratio computed, FALSE first group/second group ratio computed. paired logical. FALSE performs FC mean two groups. TRUE performs FC pair compute mean. are_log_transf logical. really need perform FC analysis already log-transformed data, specify TRUE, subtraction performed instead ratio. log_base numeric length 1. Specify base logarithm calculate logFC , are_log_transf TRUE; base logarithm used transform data. filter_sign logical. TRUE, table filtered passed FCcutoff retained. FCcutoff numeric length 1. filter_sign TRUE, value FCcutoff consider feature difference significant.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Table with Fold Change — gentab_FC","text":"tibble results Fold Change analysis","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC_more_than2levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Table with Fold Change even if the factor has more than 2 levels — gentab_FC_more_than2levels","title":"Generate a Table with Fold Change even if the factor has more than 2 levels — gentab_FC_more_than2levels","text":"Given dataframe set numerical variables dataframe, performs fold changes analysis pair levels desired variable creates new table.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC_more_than2levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Table with Fold Change even if the factor has more than 2 levels — gentab_FC_more_than2levels","text":"","code":"gentab_FC_more_than2levels(   df,   v,   f,   second_to_first_ratio = TRUE,   paired = FALSE,   are_log_transf = FALSE,   log_base = 2,   only_on_positive = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC_more_than2levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Table with Fold Change even if the factor has more than 2 levels — gentab_FC_more_than2levels","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values. f character vector length 1. Name column df containing factor variable considered performing Fold Change analysis. second_to_first_ratio logical. TRUE second group/first group ratio computed, FALSE first group/second group ratio computed. paired logical. FALSE performs FC mean two groups. TRUE performs FC pair compute mean. are_log_transf logical. really need perform FC analysis already log-transformed data, specify TRUE, subtraction performed instead ratio. log_base numeric length 1. Specify base logarithm calculate logFC , are_log_transf TRUE; base logarithm used transform data. only_on_positive logical. TRUE, FC analysis performed values positive (paired), means positive (paired). rest left NA.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_FC_more_than2levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Table with Fold Change even if the factor has more than 2 levels — gentab_FC_more_than2levels","text":"tibble results Fold Change analysis pair levels factor variables.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.1wayANOVA_posthocTukeyHSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Table with P-values from one-way ANOVA with TukeyHSD posthoc — gentab_P.1wayANOVA_posthocTukeyHSD","title":"Generate a Table with P-values from one-way ANOVA with TukeyHSD posthoc — gentab_P.1wayANOVA_posthocTukeyHSD","text":"Given dataframe set numerical variables dataframe, performs one-way ANOVA, also TukeyHSD posthoc tests groups comparison, desired variable creates new table p-values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.1wayANOVA_posthocTukeyHSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Table with P-values from one-way ANOVA with TukeyHSD posthoc — gentab_P.1wayANOVA_posthocTukeyHSD","text":"","code":"gentab_P.1wayANOVA_posthocTukeyHSD(   DF,   v,   f,   FDR = FALSE,   groupdiff = FALSE,   pcutoff = 0.05,   filter_sign = FALSE,   cutPval = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.1wayANOVA_posthocTukeyHSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Table with P-values from one-way ANOVA with TukeyHSD posthoc — gentab_P.1wayANOVA_posthocTukeyHSD","text":"DF dataframe. v character vector. element must correspond column name df, must contain numeric values. Moreover, missing values allowed (, consider replacing using function transf_data present package). f character vector length 1. Name column df containing factor variables performing ANOVA. FDR logical. TRUE, performing ANOVA, also correct p-values across different variables false discovery rate multiple comparison correction (method \"fdr\" function p.adjust). groupdiff logical. also add additional column indicating group higher? pcutoff numeric length 1, must 0 1. groupdiff TRUE, difference groups reported p-values cut-reported . filter_sign logical. TRUE, table filtered p-values lower value specified pcutoff considered. cutPval logical. TRUE, cut p-values using cutP function present package.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.1wayANOVA_posthocTukeyHSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Table with P-values from one-way ANOVA with TukeyHSD posthoc — gentab_P.1wayANOVA_posthocTukeyHSD","text":"tibble results t-tests.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.2wayANOVA_posthocTukeyHSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Table with P-values from two-way ANOVA with TukeyHSD posthoc — gentab_P.2wayANOVA_posthocTukeyHSD","title":"Generate a Table with P-values from two-way ANOVA with TukeyHSD posthoc — gentab_P.2wayANOVA_posthocTukeyHSD","text":"Given dataframe set numerical variables dataframe, performs 2-way ANOVA, also TukeyHSD posthoc tests groups comparison, desired variable creates new table p-values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.2wayANOVA_posthocTukeyHSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Table with P-values from two-way ANOVA with TukeyHSD posthoc — gentab_P.2wayANOVA_posthocTukeyHSD","text":"","code":"gentab_P.2wayANOVA_posthocTukeyHSD(   DF,   v,   f,   interact = FALSE,   FDR = FALSE,   groupdiff = FALSE,   pcutoff = 0.05,   filter_sign = FALSE,   cutPval = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.2wayANOVA_posthocTukeyHSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Table with P-values from two-way ANOVA with TukeyHSD posthoc — gentab_P.2wayANOVA_posthocTukeyHSD","text":"DF dataframe. v character vector. element must correspond column name df, must contain numeric values. Moreover, missing values allowed (, consider replacing using function transf_data present package). f character vector length 2. Name two columns df containing factor variables performing two-way ANOVA. interact logical. also want perform interactions? FDR logical. TRUE, performing ANOVA, also correct p-values across different variables false discovery rate multiple comparison correction (method \"fdr\" function p.adjust). groupdiff logical. also add additional column indicating group higher? pcutoff numeric length 1, must 0 1. groupdiff TRUE, difference groups reported p-values cut-reported . filter_sign logical. TRUE, table filtered p-values lower value specified pcutoff considered. cutPval logical. TRUE, cut p-values using cutP function present package.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.2wayANOVA_posthocTukeyHSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Table with P-values from two-way ANOVA with TukeyHSD posthoc — gentab_P.2wayANOVA_posthocTukeyHSD","text":"tibble results t-tests.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.t.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Table with P-values from a T-test — gentab_P.t.test","title":"Generate a Table with P-values from a T-test — gentab_P.t.test","text":"Given dataframe set numerical variables dataframe, performs t-test desired variable creates new table p-values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.t.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Table with P-values from a T-test — gentab_P.t.test","text":"","code":"gentab_P.t.test(   df,   v,   f,   paired = FALSE,   FDR = FALSE,   cutPval = FALSE,   groupdiff = TRUE,   pcutoff = 0.05,   filter_sign = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.t.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Table with P-values from a T-test — gentab_P.t.test","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values. Moreover, missing values allowed (, consider replacing using function transf_data present package). f character vector length 1. Name column df containing factor variable (must exactly 2 levels) considered performing t-tests. paired logical. FALSE performs non-paired t-tests. TRUE performs paired t-tests. FDR logical. TRUE, performing t-tests, also correct p-values across different variables false discovery rate multiple comparison correction (method \"fdr\" function p.adjust). cutPval logical. TRUE, cut p-values using cutP function present package. groupdiff logical. also add additional column indicating group higher? pcutoff numeric length 1, must 0 1. groupdiff TRUE, difference groups reported p-values cut-reported . filter_sign logical. TRUE, table filtered p-values lower value specified pcutoff considered.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_P.t.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Table with P-values from a T-test — gentab_P.t.test","text":"tibble results t-tests.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_descr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a table with descriptive statistics — gentab_descr","title":"Generate a table with descriptive statistics — gentab_descr","text":"Given dataframe set numerical variables dataframe, generate table descriptive statistics variables.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_descr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a table with descriptive statistics — gentab_descr","text":"","code":"gentab_descr(   df,   v,   f = NA,   type = \"mean\",   ROUND = FALSE,   dig = NA,   unit_mes = NA,   missing = \"only if >0\" )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_descr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a table with descriptive statistics — gentab_descr","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values. f character length 1 missing value. pass character, must column df containing factor: , function perform descriptive statistics grouped factor. type one following: \"mean\", \"mean SD\", \"median\", \"median (min; max)\", \"median (5th; 95th percentile)\", \"median (25th; 75th percentile)\". ROUND logical. values rounded? TRUE, indicate number decimal places dig argument. dig numeric length 1 missing value. ROUND TRUE, can indicate number decimal places; missing, function round_the_result present package used. unit_mes character length 1 missing value. can specify unit measure add cell table (suggest actually variable indicated v). missing one following: \"always\", \"never\", \">0\". also want report table many missing values present?","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_descr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a table with descriptive statistics — gentab_descr","text":"tibble (data frame) first row number observations, row reports desired descriptive statistics considered variable.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_lm_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a long table with complete results of linear regression models — gentab_lm_long","title":"Generate a long table with complete results of linear regression models — gentab_lm_long","text":"Given dataframe set dependent independent variables dataframe, generates linear regression model single dependent variable creates new table slopes p-values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_lm_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a long table with complete results of linear regression models — gentab_lm_long","text":"","code":"gentab_lm_long(   df,   dep,   form_ind,   mdl = \"lm\",   left_cens = NULL,   right_cens = NULL,   var_perc = FALSE,   base = exp(1),   FDR = FALSE,   filter_sign = FALSE,   pcutoff = 0.05,   cutPval = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_lm_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a long table with complete results of linear regression models — gentab_lm_long","text":"df dataframe. dep character vector. element must correspond column name df, must contain numeric values. form_ind character vector length 1. Write part formual linear model ~ (example: linear model dependent ~ independent1 + independent2 + independent3, pass : \"independent1 + independent2 + independent3\"). mdl one following: \"lm\", \"lmer\", \"tobit\". linear model fixed effects choose \"lm\" (uses function lm); linear model mixed effects choose \"lmer\" (function lmer lmerTest package);  linear model censored variable choose \"tobit\" (function tobit AER package) left_cens NULL named numeric vector. mdl \"tobit\", indicate left-censored values (e.g.: limit detection values). particular, argument set NULL (left-censored values) named numeric vector whose names must correspond variables passed dep. right_cens NULL named numeric vector. mdl \"tobit\", indicate right-censored values (e.g.: upper limit detection values). particular, argument set NULL (right-censored values) named numeric vector whose names must correspond variables passed dep. var_perc logical. Besides beta slopes, also want know variation percentage? (, please, ensure data log-transformormed scaled; consider using function data_transf present package ). variation percentage calculated follow: (((base^beta)-1)*100). base numerical length one. var_perc TRUE, base logarithm used log-transform dependent variables. FDR logical. TRUE, performing ANOVA, also correct p-values across different variables false discovery rate multiple comparison correction (method \"fdr\" function p.adjust). filter_sign logical. TRUE, table filtered p-values lower value specified pcutoff considered. pcutoff numeric length 1, must 0 1. filter_sign TRUE, cut-value p-values. cutPval logical. TRUE, cut p-values using cutP function present package.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/gentab_lm_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a long table with complete results of linear regression models — gentab_lm_long","text":"tibble results t-tests.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getBoxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create some simple boxplots. — getBoxplots","title":"Create some simple boxplots. — getBoxplots","text":"Given table containing data, create boxplots desired variable.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getBoxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create some simple boxplots. — getBoxplots","text":"","code":"getBoxplots(df, v, f, col_pal = NULL)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getBoxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create some simple boxplots. — getBoxplots","text":"df dataframe. Containing data plot. v character. names columns df containing numerical data plot f character length 1. names factor variable used group boxplots. col_pal NULL character vector containing colors. NULL, colors pals package used (see function build_long_vector_of_colors).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getBoxplots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create some simple boxplots. — getBoxplots","text":"ggplot object (v 1), list ggplots (v contains 2 elements).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getChemData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Chemical data from PubChem. — getChemData","title":"Get Chemical data from PubChem. — getChemData","text":"Given set molecules least known identifier code one, first retrieve PubChem CID (unless passed identifier), gets PubChem desired proprierties identifier, can also classify compounds based ClassiFire classification. function needs stable internet connection might take several time (depending number compounds information retrieve).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getChemData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Chemical data from PubChem. — getChemData","text":"","code":"getChemData(   id,   idtype,   properties = NULL,   otheridentifiers = NULL,   synonyms = NULL,   ClassiFire = NULL )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getChemData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Chemical data from PubChem. — getChemData","text":"id vector identifier codes. idtype character length 1 length id. elements vector must one following: \"CID\", \"SMILES\", \"InChI\", \"InChIKey\". one provided, assumed id type. Otherwise, type element id can specified . properties NULL character. \"\" passed, PubChem properties fetched. wanted properties might want get : \"Title\", \"SMILES\", \"InChI\", \"InChIKey\", \"IUPACName\", \"MolecularWeight\", \"ExactMass\", \"MonoisotopicMass\". know PubChem properties run all_PubChem_properties(), can also read full description : https://pubchem.ncbi.nlm.nih.gov/docs/pug-rest#section=Compound-Property-Tables. otheridentifiers NULL character. \"\" passed, identifiers available PubChem fetched. common identifiers might want pass : \"CAS\", \"HMDB\", \"KEGG\", \"ChEBI\", \"ChEMBL\", \"DrugBank\", \"DSSTox\". synonyms NULL integer. Inf passed, synonyms available PubChem fetched (maximum 999). Otherwise, pass number top synonyms reported PubChem retrieve. ClassiFire NULL character. \"\" passed, levels ClassiFire classification retrieved; otherwise can pass desired ones. levels : \"kingdom\", \"superclass\", \"class\", \"subclass\", \"level 5\", \"level 6\", \"level 7\", \"level 8\".","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getChemData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Chemical data from PubChem. — getChemData","text":"data frame (tibble) row compound provided id. first column id provided, second column PubChem CID, columns contain desired information retrieved. console also printed status retrival.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getHeatMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an Heat Map. — getHeatMap","title":"Get an Heat Map. — getHeatMap","text":"Given table containing data, creates heat map graph.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getHeatMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an Heat Map. — getHeatMap","text":"","code":"getHeatMap(   df,   v,   s = NULL,   f = NULL,   dfv = NULL,   sv = NULL,   fv = NULL,   order_df_by = NULL,   order_dfv_by = NULL,   trnsp = TRUE,   cluster_rows = FALSE,   cluster_columns = FALSE,   name_rows = FALSE,   name_columns = FALSE,   rotate_name_columns = TRUE,   three_heat_colors = c(\"red\", \"white\", \"blue\"),   set_heat_colors_limits = FALSE,   heat_colors_limits = NULL,   col_pal_list = NULL )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getHeatMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an Heat Map. — getHeatMap","text":"df dataframe. Containing data plot. v character. names columns df containing numerical data (ideally, already centered scaled!!). s NULL character length 1. name column df containing sample names. need pass want sample names heat map. f NULL character. name(s) column(s) df containing factor variable. Pass want additional rectangles groups heat map. dfv NULL dataframe. first column must contain v. Additional columns can used ordering grouping related v. sv NULL character length 1. name column dfv containing names. need pass want names heat map want replace existing column names. fv NULL character. name(s) column(s) dfv containing factor variable. Pass want additional rectangles groups heat map. order_df_by NULL character. name(s) column(s) df want use order values. order_dfv_by NULL character. name(s) column(s) dfv want use order values. trnsp logical. TRUE, matrix created columns v df transposed used heat map. cluster_rows logical. TRUE, dendrogram built hierarchical clustering distances row values added left side heat map. cluster_columns logical. TRUE, dendrogram built hierarchical clustering distances column values added heat map. name_rows logical. TRUE, names added rows, right heat map. name_columns logical. TRUE, names added column, heat map. rotate_name_columns logical. TRUE, column names rotated vertically (argument meaningless name_columns FALSE). three_heat_colors character length 3, specifying color. 3 colors used color scale values heat map. set_heat_colors_limits logical. TRUE, absolute minimum absolute maximum value (higher) set positive upper limit negative lower limit color gradients values heat map (also set middle color exactly zero). heat_colors_limits NULL numeric length 2. set_heat_colors_limits FALSE, can specify limits color gradients values heat map (NULL, maximum minimum values used). col_pal_list NULL list containing elements named f fv; element character vector containing colors. colors used rectangles group classifications. element, NULL, colors taken pals package (see function build_long_vector_of_colors).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getHeatMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an Heat Map. — getHeatMap","text":"ggplot object.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Principal components analysis. — getPCA","title":"Get Principal components analysis. — getPCA","text":"Given table containing data, performs Principal components analysis.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Principal components analysis. — getPCA","text":"","code":"getPCA(   df,   v,   s = NULL,   f = NULL,   dfv = NULL,   sv = NULL,   fv = NULL,   labels_on_loading = TRUE,   center = FALSE,   scale. = FALSE,   col_pal = NULL,   col_pal_fv = NULL,   PC_to_plot = c(\"PC1\", \"PC2\"),   ellipses_on_score = TRUE,   ellipses_on_loading = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Principal components analysis. — getPCA","text":"df dataframe. Containing data plot. v character. names columns df containing numerical data (ideally, already centered scaled!!). s NULL character length 1. name column df containing sample names. Pass want sample names score plot. f NULL character length 1. name column df containing factor variable. Pass want colored points ellipses score plot. dfv NULL dataframe. first column must contain v. dataframe lodgings table added. sv NULL character. name column dfv containing names want put loading plot. Pass want names loading plot. fv NULL character. name column dfv containing factor variable. Pass want colored points ellipses loading plot. labels_on_loading logical. Even dfv /sv NULL, argument set TRUE, loading plot report v labels. center logical. Whether variables shifted zero centered (prcomp function). scale. logical. whether variables scaled unit variance analysis takes place (prcomp function). col_pal character vector containing colors f. NULL, colors pals package used (see function build_long_vector_of_colors). col_pal_fv character vector containing colors fv. NULL, colors pals package used (see function build_long_vector_of_colors). PC_to_plot character length 2. principal components plots score loading plots. ellipses_on_score logical. specified f TRUE, ellipses added score plot. ellipses_on_loading logical. specified fv TRUE, ellipses added score plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/getPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Principal components analysis. — getPCA","text":"list 4 objects: df_with_scores_table: df additional columns containing scores. dfv_with_loadings_table: dfv additional columns containing containing loadings. score_plot: ggplot object score plot. loading_plot: ggplot object loading plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_AnnoLevels_MSDial.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the annotation levels. — get_AnnoLevels_MSDial","title":"Get the annotation levels. — get_AnnoLevels_MSDial","text":"Given featINFO table obtained MSDIAL function get_feat_info_from_MSDial, adds column annotation levels according https://doi.org/10.1007/s00216-022-04207-z.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_AnnoLevels_MSDial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the annotation levels. — get_AnnoLevels_MSDial","text":"","code":"get_AnnoLevels_MSDial(feat_info_table_MSDial)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_AnnoLevels_MSDial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the annotation levels. — get_AnnoLevels_MSDial","text":"feat_info_table_MSDial dataframe. featINFO table created get_feat_info_from_MSDial.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_AnnoLevels_MSDial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the annotation levels. — get_AnnoLevels_MSDial","text":"tibble, featINFO table additional column annotation levels.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_MSDial.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a featINFO table from the MSDIAL export file. — get_feat_info_from_MSDial","title":"Get a featINFO table from the MSDIAL export file. — get_feat_info_from_MSDial","text":"Given table exported MSDIAL (exporting Area MS-Dial 5.1.230912), creates featINFO table, .e. table full information feature.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_MSDial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a featINFO table from the MSDIAL export file. — get_feat_info_from_MSDial","text":"","code":"get_feat_info_from_MSDial(   MSDIAL_raw_table = NULL,   MSDIAL_raw_table_file_name = NULL,   add_AnnoLevels = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_MSDial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a featINFO table from the MSDIAL export file. — get_feat_info_from_MSDial","text":"MSDIAL_raw_table NULL dataframe. Load R exported table using write_tsv write_csv, directly pass argument. argument ignored following one NULL. MSDIAL_raw_table_file_name NULL character vector length 1. name .txt file MSDIAL exported table import. preferred use argument instead previous, table also imported correct column types information. add_AnnoLevels logical. TRUE, additional column named \"AnnoLevels\" added, annotation levels calculated considering cut-offs reported https://doi.org/10.1007/s00216-022-04207-z.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_MSDial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a featINFO table from the MSDIAL export file. — get_feat_info_from_MSDial","text":"tibble information feature.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_patRoon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a featINFO table from the patRoon outputs. — get_feat_info_from_patRoon","title":"Get a featINFO table from the patRoon outputs. — get_feat_info_from_patRoon","text":"Given featureGroups, components, MFsummary tables, creates featINFO table, .e. table full information feature.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_patRoon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a featINFO table from the patRoon outputs. — get_feat_info_from_patRoon","text":"","code":"get_feat_info_from_patRoon(   patRoon_featureGroups = NULL,   patRoon_featureGroups_file_name = NULL,   patRoon_MFsummary = NULL,   patRoon_MFsummary_file_name = NULL,   MFsummary_score_columns = c(\"individualMoNAScore\", \"score\"),   add_AnnoLevels = FALSE )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_patRoon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a featINFO table from the patRoon outputs. — get_feat_info_from_patRoon","text":"patRoon_featureGroups NULL dataframe. Features groups related intensities obtained XCMS. table contain feature group names column named \"group\", retention times column named \"ret\", m/z ratio column named \"mz\", intensities columns. patRoon_featureGroups_file_name NULL character vector length 1. patRoon_featureGroups NULL, can used directly import table .csv .txt file name passed. patRoon_MFsummary NULL dataframe obtained converting .data.table output function generateCompounds patRoon. least column named \"group\" \"score\" must present, multiple molecules annotated feature group, one top score provided MFsummary_score_columns argument considered. patRoon_MFsummary_file_name NULL character vector length 1. patRoon_MFsummary NULL, can used directly import table .csv .txt file name passed. MFsummary_score_columns character length 1 . name column(s) patRoon_MFsummary used prioritization score assign candidate. first provided column used first, score tied, second provided column considered, . add_AnnoLevels logical. TRUE, MFsummary table loaded suitable individualMoNAScore, additional column named \"AnnoLevels\" added, annotation levels calculated considering cut-offs reported https://doi.org/10.1007/s00216-022-04207-z.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_info_from_patRoon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a featINFO table from the patRoon outputs. — get_feat_info_from_patRoon","text":"tibble information feature.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_MSDial.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of feature intensities from the MSDIAL export file. — get_feat_table_from_MSDial","title":"Get a table of feature intensities from the MSDIAL export file. — get_feat_table_from_MSDial","text":"Given table exported MSDIAL (exporting Area MS-Dial 5.1.230912), creates table name features first column (names created one featINFO) intensities features column.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_MSDial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of feature intensities from the MSDIAL export file. — get_feat_table_from_MSDial","text":"","code":"get_feat_table_from_MSDial(   MSDIAL_raw_table = NULL,   MSDIAL_raw_table_file_name = NULL,   n_last_coloums_to_delete = 2 )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_MSDial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a table of feature intensities from the MSDIAL export file. — get_feat_table_from_MSDial","text":"MSDIAL_raw_table NULL dataframe. Load R exported table using write_tsv write_csv, directly pass argument. argument ignored following one NULL. MSDIAL_raw_table_file_name NULL character vector length 1. name .txt file MSDIAL exported table import. preferred use argument instead previous, table also imported correct column types information. n_last_coloums_to_delete numeric length 1. Usually exported file MSDIAL, last columns descriptive statistics features. Pass number last columns need remove.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_MSDial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of feature intensities from the MSDIAL export file. — get_feat_table_from_MSDial","text":"tibble feature intensities.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_patRoon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of feature intensities from the patRoon output. — get_feat_table_from_patRoon","title":"Get a table of feature intensities from the patRoon output. — get_feat_table_from_patRoon","text":"Given featureGroups table obtained patRoon, creates table name features first column intensities features column.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_patRoon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of feature intensities from the patRoon output. — get_feat_table_from_patRoon","text":"","code":"get_feat_table_from_patRoon(   patRoon_featureGroups = NULL,   patRoon_featureGroups_file_name = NULL )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_patRoon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a table of feature intensities from the patRoon output. — get_feat_table_from_patRoon","text":"patRoon_featureGroups NULL dataframe. Features groups related intensities obtained XCMS. table contain feature group names column named \"group\", retention times column named \"ret\", m/z ratio column named \"mz\", intensities columns. patRoon_featureGroups_file_name NULL character vector length 1. patRoon_featureGroups NULL, can used directly import table .csv .txt file name passed.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_feat_table_from_patRoon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of feature intensities from the patRoon output. — get_feat_table_from_patRoon","text":"tibble feature intensities.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_phase_amount.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the amount of mobile phases needed for a sequence. — get_phase_amount","title":"Get the amount of mobile phases needed for a sequence. — get_phase_amount","text":"Given dataframe containing gradient steps, calculates amount phase needed sequence.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_phase_amount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the amount of mobile phases needed for a sequence. — get_phase_amount","text":"","code":"get_phase_amount(grad, ambient = 2, an = 1)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_phase_amount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the amount of mobile phases needed for a sequence. — get_phase_amount","text":"grad dataframe 4 columns. first column contains minute gradient step. second column flow mL/min gradient step. third column percentage -phase step. four column percentage B-phase step. ambient numeric length 1. number minutes system stays t0 conditions analysis. numeric length 1. number analyses sequence.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_phase_amount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the amount of mobile phases needed for a sequence. — get_phase_amount","text":"prints information console.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_targeted_elaboration.html","id":null,"dir":"Reference","previous_headings":"","what":"Elaborating results of targeted analyses — get_targeted_elaboration","title":"Elaborating results of targeted analyses — get_targeted_elaboration","text":"Given tables containing data targeted analyses, including calibration curve, calculates concentrations unknown samples. moooore","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_targeted_elaboration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elaborating results of targeted analyses — get_targeted_elaboration","text":"","code":"get_targeted_elaboration(data_intensity, data_legend, compound_legend = NULL)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_targeted_elaboration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elaborating results of targeted analyses — get_targeted_elaboration","text":"data_intensity dataframe containing intensity area peak, row corresponding sample, column analysed molecule. first column must contain name samples, columns intensities. data_legend dataframe first column must equal first column data_intensity; second column contains samply_type, .e.: \"blank\", \"curve\", \"qc\", \"unknown\"; following columns contain, targeted compound, actual values curve qc. compound_legend either NULL dataframe four columns: first column contains targeted molecules; second column contains relative matched internal standard (NAs); third column contains weighting factor, .e. either \"none\" (NA) operation perform X /Y calculating weighting factors linear models, X Y must uppercase (examples: \"1/X\", \"1/(X^2)\", \"1/Y\", \"1/sqrt(Y)\"); fourth column contains unit mesure concentrations (reference later visualisation, used calculation).","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/get_targeted_elaboration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Elaborating results of targeted analyses — get_targeted_elaboration","text":"list 5 tibbles 1 list: results_concentrations, table results; results_accuracy, table accuracies (expressed % theoretical value); cv_internal_standards, table variation cofficients (%) internal standards; compound_legend, table provided argument compound_legend; summary_regression_models, table slopes, intercepts, r.squared, adj.r.squared; regression_models, list containing computed linear models.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/mean_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean-scale values — mean_scale","title":"Mean-scale values — mean_scale","text":"vector numbers, subtracts mean element.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/mean_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean-scale values — mean_scale","text":"","code":"mean_scale(x, na.rm = FALSE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/mean_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean-scale values — mean_scale","text":"x numeric vector. na.rm logical. missing value stripped computation? (mean)","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/mean_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean-scale values — mean_scale","text":"numeric vector scaled values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/merge_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Combining results from different chromatographic/polarity sequences. — merge_results","title":"Combining results from different chromatographic/polarity sequences. — merge_results","text":"Given final output/statistical tables different chromatographics/polarities analyses study (e.g.: HILIC POS, RPLC NEG), combines together results.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/merge_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combining results from different chromatographic/polarity sequences. — merge_results","text":"","code":"merge_results(   results_list,   strings_in_colnames_to_remove = \"\",   by_column = NULL,   if_duplicated_consider_columns = NULL,   decreasing = FALSE,   name_new_column = \"chromatographic_run\" )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/merge_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combining results from different chromatographic/polarity sequences. — merge_results","text":"results_list list, element data frame results (e.g. statistical analyses) combine together. Ideally, row annotated compound, column can contain information , example results statistics, chemical information, feature intensities, etc.. strings_in_colnames_to_remove character vector length 1 length data frames results_list. , string removed consider together samples. typical example: c(\"_HILIC_pos\", \"_RP_neg\", \"_RP_pos\"). by_column NULL character vector length 1 indicating column name data frames. column reference used treat duplicated, ranked based if_duplicated_consider_columns argument. if_duplicated_consider_columns NULL character vector column names data frames. columns must contain numerical factor variables, serve prioritize row keep combined data frame case duplicated column passed by_column. first column if_duplicated_consider_columns considered, case tie, second one, . decreasing logical vector length 1 length if_duplicated_consider_columns. columns passed if_duplicated_consider_columns, ranking order decreasing TRUE, increasing FALSE. name_new_column character length 1. new column created merged table name, indicating original data frame.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/merge_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combining results from different chromatographic/polarity sequences. — merge_results","text":"tibble combined results.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/pareto_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Pareto-scale values — pareto_scale","title":"Pareto-scale values — pareto_scale","text":"vector numbers, element subtracts mean divide squared root standard deviation.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/pareto_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pareto-scale values — pareto_scale","text":"","code":"pareto_scale(x, na.rm = FALSE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/pareto_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pareto-scale values — pareto_scale","text":"x numeric vector. na.rm logical. missing value stripped computation? (mean sd)","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/pareto_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pareto-scale values — pareto_scale","text":"numeric vector scaled values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/plot_calibration_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting calibration curves of a targeted elaboration — plot_calibration_curves","title":"Plotting calibration curves of a targeted elaboration — plot_calibration_curves","text":"creates plots calibration curves targeted elaboration.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/plot_calibration_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting calibration curves of a targeted elaboration — plot_calibration_curves","text":"","code":"plot_calibration_curves(targeted_elaboration)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/plot_calibration_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting calibration curves of a targeted elaboration — plot_calibration_curves","text":"targeted_elaboration list, output function get_targeted_elaboration.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/plot_calibration_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting calibration curves of a targeted elaboration — plot_calibration_curves","text":"list ggplots, one linear model computed. can print console see plots, export using function export_figures.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/range_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Range-scale values — range_scale","title":"Range-scale values — range_scale","text":"vector numbers, element subtracts mean divide difference maximum minimum values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/range_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range-scale values — range_scale","text":"","code":"range_scale(x, na.rm = FALSE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/range_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range-scale values — range_scale","text":"x numeric vector. na.rm logical. missing value stripped computation? (mean, max min)","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/range_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Range-scale values — range_scale","text":"numeric vector scaled values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/round_the_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Round a number to defined digital places — round_the_result","title":"Round a number to defined digital places — round_the_result","text":"number less 10, returns rounded 3 digits, less 100 2 digits, less 1000 1 digit, otherwise 0 digits.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/round_the_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round a number to defined digital places — round_the_result","text":"","code":"round_the_result(x)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/round_the_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round a number to defined digital places — round_the_result","text":"x single number.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/round_the_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round a number to defined digital places — round_the_result","text":"single number.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_Shapiro_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Test normality with a Shapiro–Wilk test — test_normality_Shapiro_table","title":"Test normality with a Shapiro–Wilk test — test_normality_Shapiro_table","text":"Given dataframe set numerical variables dataframe, tests normality data performing Shapiro–Wilk test desired variable.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_Shapiro_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test normality with a Shapiro–Wilk test — test_normality_Shapiro_table","text":"","code":"test_normality_Shapiro_table(df, v, pvalcutoff = 0.05, cutpval = FALSE)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_Shapiro_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test normality with a Shapiro–Wilk test — test_normality_Shapiro_table","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values. pvalcutoff numeric length 1, must 0 1, indicating p-value cut-. cutpval logical. want cut P-value using function cutP present package?","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_Shapiro_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test normality with a Shapiro–Wilk test — test_normality_Shapiro_table","text":"tibble number rows equal elements specified v. , reports results Shapiro test whether data normally distributed considering given p-value cutoff.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_density_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Test normality by generating a density plot — test_normality_density_plot","title":"Test normality by generating a density plot — test_normality_density_plot","text":"Given dataframe set numerical variables dataframe, creates density plot desired variable.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_density_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test normality by generating a density plot — test_normality_density_plot","text":"","code":"test_normality_density_plot(df, v)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_density_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test normality by generating a density plot — test_normality_density_plot","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_density_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test normality by generating a density plot — test_normality_density_plot","text":"list containing number element equal length v. element density plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_q_q_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Test normality by generating a Q-Q plot — test_normality_q_q_plot","title":"Test normality by generating a Q-Q plot — test_normality_q_q_plot","text":"Given dataframe set numerical variables dataframe, creates Q-Q plot desired variable.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_q_q_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test normality by generating a Q-Q plot — test_normality_q_q_plot","text":"","code":"test_normality_q_q_plot(df, v)"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_q_q_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test normality by generating a Q-Q plot — test_normality_q_q_plot","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/test_normality_q_q_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test normality by generating a Q-Q plot — test_normality_q_q_plot","text":"list containing number element equal length v. element Q-Q plot.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transf_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the data — transf_data","title":"Transform the data — transf_data","text":"Given dataframe set numerical variables dataframe, can replace missing values, log-transform, /scale data.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transf_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the data — transf_data","text":"","code":"transf_data(   df,   v,   missing_replace = TRUE,   missing_repl_type = \"divide\",   missing_repl_value = 5,   log_transf = TRUE,   log_base = exp(1),   scaling = TRUE,   scaling_type = \"pareto_scale\",   vect_names_transf = FALSE,   name_vect_names = \"vars_ready\" )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transf_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the data — transf_data","text":"df dataframe. v character vector. element must correspond column name df, must contain numeric values. missing_replace logical. missing value replaced? TRUE, missing value replaced minimum value variable, modified operation indicated missing_repl_type missing_repl_value arguments. variable missing values, processed . missing_repl_type one following: \"divide\", \"multiply\", \"exponentiate\". missing_replace TRUE, missing values replaced minimum value variable divided (\"divide\"), multiplied (\"multiply\"), raised power (\"exponentiate\") value indicated missing_repl_value argument. Suggestion: want replace missing values squared root minimum value, select \"exponentiate\" missing_repl_value put 1/2 (raising power 1/2 equal applying square root). missing_repl_value numerical length 1. missing_replace TRUE, value operation indicated missing_repl_type applied minimum values, result replace missing values. log_transf logical. log-transformation applied data? log_base numerical length 1. log_transf TRUE, base logarithm applied transform data. scaling logical. data scaled? TRUE, set scaling_type argument properly. scaling_type one following: \"mean_scale\", \"auto_scale\", \"pareto_scale\", \"range_scale\". scaling TRUE, variable, data subtracted mean (\"mean_scale\"), subtracted mean divided standard deviation (\"auto_scale\"), subtracted mean divided squared root standard deviation (\"pareto_scale\"), subtracted mean divided difference maximum minimum values (\"range_scale\"). vect_names_transf logical. TRUE, also create global environment character vectors containing names variables transformed. useful pass names v arguments furhter statistical functions package. name_vect_names character length 1. vect_names_transf TRUE, specify main name character vectors containing names transformed variables.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transf_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the data — transf_data","text":"df new columns containing transformed values. particular: new columns end \"_mr\" refer missing values replaced, \"_ln\", \"_Log\", \"_log\" log-transformed, \"_meansc\", \"_autosc\", \"_paretosc\", \"_rangesc\" scaling. example, new columns end \"_mr_ln_paretosc\" refer data missing value replaced, natural-logarithm transformed, pareto scaled. Check also name column setting vect_names_transf TRUE check global environment objects whose names start set name_vect_names.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transpose_feat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose features table. — transpose_feat_table","title":"Transpose features table. — transpose_feat_table","text":"Given feature table, transposes , suitable following elaborations statistical analyses.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transpose_feat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose features table. — transpose_feat_table","text":"","code":"transpose_feat_table(feat_table, name_first_column = \"samples\")"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transpose_feat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose features table. — transpose_feat_table","text":"feat_table dataframe: first column featname, column sample feature intensities. row feature. can obtained get_feat_table_from_MSDial function present package, ideally underwent cleaning QCs using QCs_process function. name_first_column character length 1. can specify name first column, referred column samples.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/transpose_feat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose features table. — transpose_feat_table","text":"tibble samples rows features columns.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/zero_prefixing.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero prefixing numbers — zero_prefixing","title":"Zero prefixing numbers — zero_prefixing","text":"converts number character zeros prefix, useful ordered name correctly.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/zero_prefixing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero prefixing numbers — zero_prefixing","text":"","code":"zero_prefixing(   numbers,   highest = max(numbers),   additional_prefix = NULL,   additional_suffix = NULL )"},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/zero_prefixing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero prefixing numbers — zero_prefixing","text":"numbers numeric. Numbers converted. highest numeric length 1. highest number, used define numbers zeros. default, uses max vector passed numbers. additional_prefix NULL character length 1. additional prefix add beginning number. additional_suffix NULL character length 1. additional suffix add beginning number.","code":""},{"path":"https://frigeriogianfranco.github.io/GetFeatistics/reference/zero_prefixing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero prefixing numbers — zero_prefixing","text":"character vector added zeros prefix.","code":""}]
